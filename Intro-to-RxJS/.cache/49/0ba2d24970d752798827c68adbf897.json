{"id":"../node_modules/rxjs/dist/esm5/internal/observable/generate.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js.map","includedInParent":true,"mtime":1655261656584},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\observable\\generate.ts","includedInParent":true,"mtime":1655261656723},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"tslib","loc":{"line":1,"column":28,"index":28},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\tslib\\tslib.es6.js"},{"name":"../util/identity","loc":{"line":2,"column":25,"index":63},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js"},{"name":"../util/isScheduler","loc":{"line":3,"column":28,"index":112},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isScheduler.js"},{"name":"./defer","loc":{"line":4,"column":22,"index":158},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\defer.js"},{"name":"../scheduled/scheduleIterable","loc":{"line":5,"column":33,"index":203},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\scheduled\\scheduleIterable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generate = generate;\n\nvar _tslib = require(\"tslib\");\n\nvar _identity = require(\"../util/identity\");\n\nvar _isScheduler = require(\"../util/isScheduler\");\n\nvar _defer = require(\"./defer\");\n\nvar _scheduleIterable = require(\"../scheduled/scheduleIterable\");\n\nfunction generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n  var _a, _b;\n\n  var resultSelector;\n  var initialState;\n\n  if (arguments.length === 1) {\n    _a = initialStateOrOptions, initialState = _a.initialState, condition = _a.condition, iterate = _a.iterate, _b = _a.resultSelector, resultSelector = _b === void 0 ? _identity.identity : _b, scheduler = _a.scheduler;\n  } else {\n    initialState = initialStateOrOptions;\n\n    if (!resultSelectorOrScheduler || (0, _isScheduler.isScheduler)(resultSelectorOrScheduler)) {\n      resultSelector = _identity.identity;\n      scheduler = resultSelectorOrScheduler;\n    } else {\n      resultSelector = resultSelectorOrScheduler;\n    }\n  }\n\n  function gen() {\n    var state;\n    return (0, _tslib.__generator)(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          state = initialState;\n          _a.label = 1;\n\n        case 1:\n          if (!(!condition || condition(state))) return [3, 4];\n          return [4, resultSelector(state)];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          state = iterate(state);\n          return [3, 1];\n\n        case 4:\n          return [2];\n      }\n    });\n  }\n\n  return (0, _defer.defer)(scheduler ? function () {\n    return (0, _scheduleIterable.scheduleIterable)(gen(), scheduler);\n  } : gen);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":0}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":16},"generated":{"line":18,"column":9}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":17}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":334,"column":2},"generated":{"line":18,"column":18}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":39}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":335,"column":2},"generated":{"line":18,"column":41}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":50}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":336,"column":2},"generated":{"line":18,"column":52}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":59}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":337,"column":2},"generated":{"line":18,"column":61}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":86}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":338,"column":2},"generated":{"line":18,"column":88}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":18,"column":97}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":338,"column":27},"generated":{"line":18,"column":99}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":340,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":340,"column":6},"generated":{"line":21,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":340,"column":2},"generated":{"line":21,"column":20}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":341,"column":2},"generated":{"line":22,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":341,"column":6},"generated":{"line":22,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":341,"column":2},"generated":{"line":22,"column":18}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":2},"generated":{"line":24,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":6},"generated":{"line":24,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":15},"generated":{"line":24,"column":15}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":16},"generated":{"line":24,"column":16}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":6},"generated":{"line":24,"column":22}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":27},"generated":{"line":24,"column":27}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":2},"generated":{"line":24,"column":28}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":30},"generated":{"line":24,"column":30}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":4}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":354,"column":8},"generated":{"line":25,"column":9}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":30}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":349,"column":6},"generated":{"line":25,"column":32}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":349,"column":18},"generated":{"line":25,"column":44}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":349,"column":18},"generated":{"line":25,"column":47}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":349,"column":18},"generated":{"line":25,"column":49}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":349,"column":18},"generated":{"line":25,"column":50}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":62}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":6},"generated":{"line":25,"column":64}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":15},"generated":{"line":25,"column":73}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":15},"generated":{"line":25,"column":76}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":15},"generated":{"line":25,"column":78}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":15},"generated":{"line":25,"column":79}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":88}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":6},"generated":{"line":25,"column":90}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":13},"generated":{"line":25,"column":97}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":13},"generated":{"line":25,"column":100}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":13},"generated":{"line":25,"column":102}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":13},"generated":{"line":25,"column":103}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":110}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":25,"column":112}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":25,"column":114}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":25,"column":117}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":25,"column":119}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":25,"column":120}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":134}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":25,"column":136}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":150}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":153}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":155}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":160}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":165}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":166}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":23},"generated":{"line":25,"column":169}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":25,"column":187}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":51},"generated":{"line":25,"column":190}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":5},"generated":{"line":25,"column":192}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":6},"generated":{"line":25,"column":194}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":15},"generated":{"line":25,"column":203}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":15},"generated":{"line":25,"column":206}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":15},"generated":{"line":25,"column":208}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":15},"generated":{"line":25,"column":209}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":348,"column":4},"generated":{"line":25,"column":218}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":355,"column":3},"generated":{"line":26,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":345,"column":2},"generated":{"line":26,"column":3}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":355,"column":9},"generated":{"line":26,"column":9}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":358,"column":4},"generated":{"line":27,"column":4}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":358,"column":16},"generated":{"line":27,"column":16}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":358,"column":19},"generated":{"line":27,"column":19}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":358,"column":4},"generated":{"line":27,"column":40}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":4},"generated":{"line":29,"column":4}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":8},"generated":{"line":29,"column":8}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":9},"generated":{"line":29,"column":9}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":8},"generated":{"line":29,"column":34}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":38},"generated":{"line":29,"column":38}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":38},"generated":{"line":29,"column":42}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":38},"generated":{"line":29,"column":66}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":50},"generated":{"line":29,"column":68}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":38},"generated":{"line":29,"column":93}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":4},"generated":{"line":29,"column":94}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":78},"generated":{"line":29,"column":96}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":6},"generated":{"line":30,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":20},"generated":{"line":30,"column":20}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":23},"generated":{"line":30,"column":23}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":6},"generated":{"line":30,"column":41}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":6},"generated":{"line":31,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":15},"generated":{"line":31,"column":15}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":18},"generated":{"line":31,"column":18}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":6},"generated":{"line":31,"column":43}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":362,"column":5},"generated":{"line":32,"column":4}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":4},"generated":{"line":32,"column":5}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":362,"column":11},"generated":{"line":32,"column":11}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":363,"column":6},"generated":{"line":33,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":363,"column":20},"generated":{"line":33,"column":20}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":363,"column":23},"generated":{"line":33,"column":23}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":363,"column":6},"generated":{"line":33,"column":48}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":364,"column":5},"generated":{"line":34,"column":4}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":365,"column":3},"generated":{"line":35,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":368,"column":2},"generated":{"line":37,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":368,"column":12},"generated":{"line":37,"column":11}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":368,"column":2},"generated":{"line":37,"column":14}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":368,"column":15},"generated":{"line":37,"column":17}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":13},"generated":{"line":42,"column":10}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":18},"generated":{"line":42,"column":15}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":21},"generated":{"line":42,"column":18}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":13},"generated":{"line":42,"column":30}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":35},"generated":{"line":46,"column":16}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":36},"generated":{"line":46,"column":17}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":35},"generated":{"line":46,"column":26}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":49},"generated":{"line":46,"column":30}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":58},"generated":{"line":46,"column":39}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":59},"generated":{"line":46,"column":40}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":58},"generated":{"line":46,"column":45}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":49}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":56}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":57}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":58}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":60}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":61}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":65},"generated":{"line":46,"column":62}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":47,"column":10}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":47,"column":17}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":47,"column":18}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":47,"column":19}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":12},"generated":{"line":47,"column":21}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":26},"generated":{"line":47,"column":35}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":27},"generated":{"line":47,"column":36}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":26},"generated":{"line":47,"column":41}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":47,"column":42}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":47,"column":43}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":50,"column":10}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":50,"column":12}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":50,"column":13}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":6},"generated":{"line":50,"column":17}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":67},"generated":{"line":55,"column":10}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":72},"generated":{"line":55,"column":15}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":75},"generated":{"line":55,"column":18}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":83},"generated":{"line":55,"column":25}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":84},"generated":{"line":55,"column":26}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":83},"generated":{"line":55,"column":31}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":67},"generated":{"line":55,"column":32}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":372,"column":3},"generated":{"line":62,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":375,"column":2},"generated":{"line":64,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":375,"column":9},"generated":{"line":64,"column":9}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":375,"column":9},"generated":{"line":64,"column":13}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":375,"column":9},"generated":{"line":64,"column":25}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":376,"column":5},"generated":{"line":64,"column":27}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":376,"column":14},"generated":{"line":64,"column":36}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":8},"generated":{"line":64,"column":39}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":8},"generated":{"line":64,"column":51}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":4}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":11}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":15}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":49}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":31},"generated":{"line":65,"column":51}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":34},"generated":{"line":65,"column":54}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":56}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":38},"generated":{"line":65,"column":58}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":67}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":14},"generated":{"line":65,"column":68}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":379,"column":49},"generated":{"line":66,"column":2}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":376,"column":14},"generated":{"line":66,"column":3}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":382,"column":8},"generated":{"line":66,"column":6}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":375,"column":9},"generated":{"line":66,"column":9}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":375,"column":2},"generated":{"line":66,"column":10}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":384,"column":1},"generated":{"line":67,"column":0}}],"sources":{"../../../../src/internal/observable/generate.ts":"import { Observable } from '../Observable';\r\nimport { identity } from '../util/identity';\r\nimport { ObservableInput, SchedulerLike } from '../types';\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { defer } from './defer';\r\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\r\n\r\ntype ConditionFunc<S> = (state: S) => boolean;\r\ntype IterateFunc<S> = (state: S) => S;\r\ntype ResultFunc<S, T> = (state: S) => T;\r\n\r\nexport interface GenerateBaseOptions<S> {\r\n  /**\r\n   * Initial state.\r\n   */\r\n  initialState: S;\r\n  /**\r\n   * Condition function that accepts state and returns boolean.\r\n   * When it returns false, the generator stops.\r\n   * If not specified, a generator never stops.\r\n   */\r\n  condition?: ConditionFunc<S>;\r\n  /**\r\n   * Iterate function that accepts state and returns new state.\r\n   */\r\n  iterate: IterateFunc<S>;\r\n  /**\r\n   * SchedulerLike to use for generation process.\r\n   * By default, a generator starts immediately.\r\n   */\r\n  scheduler?: SchedulerLike;\r\n}\r\n\r\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\r\n  /**\r\n   * Result selection function that accepts state and returns a value to emit.\r\n   */\r\n  resultSelector: ResultFunc<S, T>;\r\n}\r\n\r\n/**\r\n * Generates an observable sequence by running a state-driven loop\r\n * producing the sequence's elements, using the specified scheduler\r\n * to send out observer messages.\r\n *\r\n * ![](generate.png)\r\n *\r\n * ## Examples\r\n *\r\n * Produces sequence of numbers\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * ```\r\n *\r\n * Use `asapScheduler`\r\n *\r\n * ```ts\r\n * import { generate, asapScheduler } from 'rxjs';\r\n *\r\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 2\r\n * // 3\r\n * // 5\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link Observable}\r\n *\r\n * @param {S} initialState Initial state.\r\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\r\n * @param {function (state: S): S} iterate Iteration step function.\r\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\r\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\r\n * @returns {Observable<T>} The generated sequence.\r\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\r\n */\r\nexport function generate<T, S>(\r\n  initialState: S,\r\n  condition: ConditionFunc<S>,\r\n  iterate: IterateFunc<S>,\r\n  resultSelector: ResultFunc<S, T>,\r\n  scheduler?: SchedulerLike\r\n): Observable<T>;\r\n\r\n/**\r\n * Generates an Observable by running a state-driven loop\r\n * that emits an element on each iteration.\r\n *\r\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\r\n *\r\n * ![](generate.png)\r\n *\r\n * `generate` allows you to create a stream of values generated with a loop very similar to\r\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\r\n * is a function that accepts this value and tests if some condition still holds. If it does,\r\n * then the loop continues, if not, it stops. The third value is a function which takes the\r\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\r\n * are direct equivalents of three expressions in a traditional for loop: the first expression\r\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\r\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\r\n * will be modified on every step (for example, the index will be incremented by one).\r\n *\r\n * Return value of a `generate` operator is an Observable that on each loop iteration\r\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\r\n * emits the currently stored value (initial value at the first iteration) and finally updates\r\n * that value with iterate function. If at some point the condition returns false, then the Observable\r\n * completes at that moment.\r\n *\r\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\r\n * to immediately map the value that would normally be emitted by an Observable.\r\n *\r\n * If you find three anonymous functions in `generate` call hard to read, you can provide\r\n * a single object to the operator instead where the object has the properties: `initialState`,\r\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\r\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\r\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\r\n * condition always holds, or in other words the resulting Observable will never complete.\r\n *\r\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\r\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\r\n * function or not). In case of a single-parameter call, you can provide it as a\r\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\r\n * the next iteration of the loop will happen and therefore when the next value will be emitted\r\n * by the Observable. For example, to ensure that each value is pushed to the Observer\r\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\r\n * by default (when no scheduler is passed) values are simply emitted synchronously.\r\n *\r\n *\r\n * ## Examples\r\n *\r\n * Use with condition and iterate functions\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate(0, x => x < 3, x => x + 1);\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * Use with condition, iterate and resultSelector functions\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1000\r\n * // 2000\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * Use with options object\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   condition(value) { return value < 3; },\r\n *   iterate(value) { return value + 1; },\r\n *   resultSelector(value) { return value * 1000; }\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1000\r\n * // 2000\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * Use options object without condition function\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   iterate(value) { return value + 1; },\r\n *   resultSelector(value) { return value * 1000; }\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!') // This will never run\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1000\r\n * // 2000\r\n * // 3000\r\n * // ...and never stops.\r\n * ```\r\n *\r\n * @see {@link from}\r\n *\r\n * @param {S} initialState Initial state.\r\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\r\n * @param {function (state: S): S} iterate Iteration step function.\r\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\r\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\r\n * @return {Observable<T>} The generated sequence.\r\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\r\n */\r\nexport function generate<S>(\r\n  initialState: S,\r\n  condition: ConditionFunc<S>,\r\n  iterate: IterateFunc<S>,\r\n  scheduler?: SchedulerLike\r\n): Observable<S>;\r\n\r\n/**\r\n * Generates an observable sequence by running a state-driven loop\r\n * producing the sequence's elements, using the specified scheduler\r\n * to send out observer messages.\r\n * The overload accepts options object that might contain initial state, iterate,\r\n * condition and scheduler.\r\n *\r\n * ![](generate.png)\r\n *\r\n * ## Examples\r\n *\r\n * Use options object with condition function\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   condition: x => x < 3,\r\n *   iterate: x => x + 1\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link Observable}\r\n *\r\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\r\n * @returns {Observable<S>} The generated sequence.\r\n */\r\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\r\n\r\n/**\r\n * Generates an observable sequence by running a state-driven loop\r\n * producing the sequence's elements, using the specified scheduler\r\n * to send out observer messages.\r\n * The overload accepts options object that might contain initial state, iterate,\r\n * condition, result selector and scheduler.\r\n *\r\n * ![](generate.png)\r\n *\r\n * ## Examples\r\n *\r\n * Use options object with condition and iterate function\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   condition: x => x < 3,\r\n *   iterate: x => x + 1,\r\n *   resultSelector: x => x\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link Observable}\r\n *\r\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\r\n * @returns {Observable<T>} The generated sequence.\r\n */\r\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\r\n\r\nexport function generate<T, S>(\r\n  initialStateOrOptions: S | GenerateOptions<T, S>,\r\n  condition?: ConditionFunc<S>,\r\n  iterate?: IterateFunc<S>,\r\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\r\n  scheduler?: SchedulerLike\r\n): Observable<T> {\r\n  let resultSelector: ResultFunc<S, T>;\r\n  let initialState: S;\r\n\r\n  // TODO: Remove this as we move away from deprecated signatures\r\n  // and move towards a configuration object argument.\r\n  if (arguments.length === 1) {\r\n    // If we only have one argument, we can assume it is a configuration object.\r\n    // Note that folks not using TypeScript may trip over this.\r\n    ({\r\n      initialState,\r\n      condition,\r\n      iterate,\r\n      resultSelector = identity as ResultFunc<S, T>,\r\n      scheduler,\r\n    } = initialStateOrOptions as GenerateOptions<T, S>);\r\n  } else {\r\n    // Deprecated arguments path. Figure out what the user\r\n    // passed and set it here.\r\n    initialState = initialStateOrOptions as S;\r\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\r\n      resultSelector = identity as ResultFunc<S, T>;\r\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\r\n    } else {\r\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\r\n    }\r\n  }\r\n\r\n  // The actual generator used to \"generate\" values.\r\n  function* gen() {\r\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\r\n      yield resultSelector(state);\r\n    }\r\n  }\r\n\r\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\r\n  return defer(\r\n    (scheduler\r\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\r\n        // happens on the scheduler.\r\n        () => scheduleIterable(gen(), scheduler!)\r\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\r\n        // `defer` and executing it will return the generator (which is iterable).\r\n        gen) as () => ObservableInput<T>\r\n  );\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"b044c768e6001e3d5a85639f633ed3d0","cacheData":{"env":{}}}