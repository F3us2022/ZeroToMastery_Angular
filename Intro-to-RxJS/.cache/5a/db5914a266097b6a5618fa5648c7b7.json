{"id":"../node_modules/rxjs/dist/esm5/internal/operators/filter.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js.map","includedInParent":true,"mtime":1655261656597},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\filter.ts","includedInParent":true,"mtime":1655261656730},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/lift","loc":{"line":1,"column":24,"index":24},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41,"index":82},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filter = filter;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction filter(predicate, thisArg) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    var index = 0;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      return predicate.call(thisArg, value, index++) && subscriber.next(value);\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":12,"column":15}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":26},"generated":{"line":12,"column":16}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":12,"column":25}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":75},"generated":{"line":12,"column":27}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":12,"column":34}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":61,"column":88},"generated":{"line":12,"column":36}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":13,"column":26}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":13,"column":28}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":18},"generated":{"line":13,"column":38}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":13,"column":44}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":13,"column":46}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":13,"column":56}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":36},"generated":{"line":13,"column":58}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":14,"column":8}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":14,"column":13}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":64,"column":16},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":14,"column":17}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":15,"column":4}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":68,"column":10},"generated":{"line":15,"column":10}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":15,"column":11}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":25}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":69}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":31},"generated":{"line":15,"column":71}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":81}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":43},"generated":{"line":15,"column":83}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":44},"generated":{"line":15,"column":93}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":43},"generated":{"line":15,"column":98}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":49},"generated":{"line":15,"column":100}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":6}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":13}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":63},"generated":{"line":16,"column":22}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":64},"generated":{"line":16,"column":23}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":27}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":69},"generated":{"line":16,"column":28}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":35}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":78},"generated":{"line":16,"column":37}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":42}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":85},"generated":{"line":16,"column":44}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":90},"generated":{"line":16,"column":49}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":51}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":97},"generated":{"line":16,"column":56}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":107},"generated":{"line":16,"column":66}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":108},"generated":{"line":16,"column":67}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":97},"generated":{"line":16,"column":71}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":113},"generated":{"line":16,"column":72}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":97},"generated":{"line":16,"column":77}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":54},"generated":{"line":16,"column":78}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":119},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":17,"column":5}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":17,"column":6}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":18,"column":2}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":18,"column":3}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/filter.ts","name":null,"original":{"line":75,"column":1},"generated":{"line":19,"column":0}}],"sources":{"../../../../src/internal/operators/filter.ts":"import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\r\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\r\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\r\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Filter items emitted by the source Observable by only emitting those that\r\n * satisfy a specified predicate.\r\n *\r\n * <span class=\"informal\">Like\r\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\r\n * it only emits a value from the source if it passes a criterion function.</span>\r\n *\r\n * ![](filter.png)\r\n *\r\n * Similar to the well-known `Array.prototype.filter` method, this operator\r\n * takes values from the source Observable, passes them through a `predicate`\r\n * function and only emits those values that yielded `true`.\r\n *\r\n * ## Example\r\n *\r\n * Emit only click events whose target was a DIV element\r\n *\r\n * ```ts\r\n * import { fromEvent, filter } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n * clicksOnDivs.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilChanged}\r\n * @see {@link distinctUntilKeyChanged}\r\n * @see {@link ignoreElements}\r\n * @see {@link partition}\r\n * @see {@link skip}\r\n *\r\n * @param predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted, if `false` the value is not passed to the output\r\n * Observable. The `index` parameter is the number `i` for the i-th source\r\n * emission that has happened since the subscription, starting from the number\r\n * `0`.\r\n * @param thisArg An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable that satisfy the specified `predicate`.\r\n */\r\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    // An index passed to our predicate function on each call.\r\n    let index = 0;\r\n\r\n    // Subscribe to the source, all errors and completions are\r\n    // forwarded to the consumer.\r\n    source.subscribe(\r\n      // Call the predicate with the appropriate `this` context,\r\n      // if the predicate returns `true`, then send the value\r\n      // to the consumer.\r\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\r\n    );\r\n  });\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"91dc86fd0557e386f180b1d41ea0f103","cacheData":{"env":{}}}