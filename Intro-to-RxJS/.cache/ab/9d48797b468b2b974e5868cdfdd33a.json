{"id":"../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\distinctUntilChanged.js.map","includedInParent":true,"mtime":1655261656595},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\distinctUntilChanged.ts","includedInParent":true,"mtime":1655261656729},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/identity","loc":{"line":1,"column":25,"index":25},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\distinctUntilChanged.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js"},{"name":"../util/lift","loc":{"line":2,"column":24,"index":70},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\distinctUntilChanged.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41,"index":128},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\distinctUntilChanged.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.distinctUntilChanged = distinctUntilChanged;\n\nvar _identity = require(\"../util/identity\");\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction distinctUntilChanged(comparator, keySelector) {\n  if (keySelector === void 0) {\n    keySelector = _identity.identity;\n  }\n\n  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n  return (0, _lift.operate)(function (source, subscriber) {\n    var previousKey;\n    var first = true;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      var currentKey = keySelector(value);\n\n      if (first || !comparator(previousKey, currentKey)) {\n        first = false;\n        previousKey = currentKey;\n        subscriber.next(value);\n      }\n    }));\n  });\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":14,"column":29}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":142,"column":2},"generated":{"line":14,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":14,"column":40}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":14,"column":42}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":141,"column":6},"generated":{"line":14,"column":53}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":60},"generated":{"line":14,"column":55}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":17}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":22}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":27}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":15,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":16,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":33},"generated":{"line":16,"column":18}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":16,"column":36}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":143,"column":60},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":12},"generated":{"line":19,"column":12}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":15},"generated":{"line":19,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":25},"generated":{"line":19,"column":25}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":25},"generated":{"line":19,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":15},"generated":{"line":19,"column":34}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":15},"generated":{"line":19,"column":38}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":25},"generated":{"line":19,"column":48}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":25},"generated":{"line":19,"column":53}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":25},"generated":{"line":19,"column":58}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":15},"generated":{"line":19,"column":59}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":15},"generated":{"line":19,"column":62}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":15},"generated":{"line":19,"column":72}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":29},"generated":{"line":19,"column":75}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":148,"column":2},"generated":{"line":19,"column":89}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":2},"generated":{"line":20,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":9},"generated":{"line":20,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":9},"generated":{"line":20,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":9},"generated":{"line":20,"column":26}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":17},"generated":{"line":20,"column":28}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":18},"generated":{"line":20,"column":38}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":17},"generated":{"line":20,"column":44}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":26},"generated":{"line":20,"column":46}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":17},"generated":{"line":20,"column":56}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":36},"generated":{"line":20,"column":58}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":4},"generated":{"line":21,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":8},"generated":{"line":21,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":153,"column":4},"generated":{"line":21,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":4},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":8},"generated":{"line":22,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":13},"generated":{"line":22,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":16},"generated":{"line":22,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":155,"column":4},"generated":{"line":22,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":23,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":157,"column":10},"generated":{"line":23,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":157,"column":11},"generated":{"line":23,"column":11}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":23,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":6},"generated":{"line":23,"column":21}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":6},"generated":{"line":23,"column":25}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":6},"generated":{"line":23,"column":69}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":31},"generated":{"line":23,"column":71}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":6},"generated":{"line":23,"column":81}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":43},"generated":{"line":23,"column":83}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":44},"generated":{"line":23,"column":93}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":43},"generated":{"line":23,"column":98}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":49},"generated":{"line":23,"column":100}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":8},"generated":{"line":24,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":14},"generated":{"line":24,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":24},"generated":{"line":24,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":27},"generated":{"line":24,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":38},"generated":{"line":24,"column":34}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":39},"generated":{"line":24,"column":35}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":38},"generated":{"line":24,"column":40}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":160,"column":8},"generated":{"line":24,"column":41}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":8},"generated":{"line":26,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":12},"generated":{"line":26,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":17},"generated":{"line":26,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":21},"generated":{"line":26,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":22},"generated":{"line":26,"column":20}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":33},"generated":{"line":26,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":34},"generated":{"line":26,"column":31}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":33},"generated":{"line":26,"column":42}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":47},"generated":{"line":26,"column":44}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":33},"generated":{"line":26,"column":54}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":8},"generated":{"line":26,"column":55}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":165,"column":60},"generated":{"line":26,"column":57}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":171,"column":10},"generated":{"line":27,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":171,"column":15},"generated":{"line":27,"column":13}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":171,"column":18},"generated":{"line":27,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":171,"column":10},"generated":{"line":27,"column":21}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":172,"column":10},"generated":{"line":28,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":172,"column":21},"generated":{"line":28,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":172,"column":24},"generated":{"line":28,"column":22}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":172,"column":10},"generated":{"line":28,"column":32}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":10},"generated":{"line":29,"column":8}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":20},"generated":{"line":29,"column":18}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":21},"generated":{"line":29,"column":19}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":10},"generated":{"line":29,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":26},"generated":{"line":29,"column":24}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":175,"column":10},"generated":{"line":29,"column":29}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":176,"column":9},"generated":{"line":30,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":177,"column":7},"generated":{"line":31,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":158,"column":6},"generated":{"line":31,"column":5}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":31,"column":6}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":179,"column":3},"generated":{"line":32,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":9},"generated":{"line":32,"column":3}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":150,"column":2},"generated":{"line":32,"column":4}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":180,"column":1},"generated":{"line":33,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":9},"generated":{"line":35,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":0},"generated":{"line":35,"column":23}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":24},"generated":{"line":35,"column":24}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":0},"generated":{"line":35,"column":25}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":32},"generated":{"line":35,"column":27}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":0},"generated":{"line":35,"column":28}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":182,"column":38},"generated":{"line":35,"column":30}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":183,"column":2},"generated":{"line":36,"column":2}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":183,"column":9},"generated":{"line":36,"column":9}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":183,"column":10},"generated":{"line":36,"column":10}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":183,"column":15},"generated":{"line":36,"column":15}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":183,"column":2},"generated":{"line":36,"column":16}},{"source":"../../../../src/internal/operators/distinctUntilChanged.ts","name":null,"original":{"line":184,"column":1},"generated":{"line":37,"column":0}}],"sources":{"../../../../src/internal/operators/distinctUntilChanged.ts":"import { MonoTypeOperatorFunction } from '../types';\r\nimport { identity } from '../util/identity';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\r\n * are distinct in comparison to the last value the result observable emitted.\r\n *\r\n * 1. It will always emit the first value from the source.\r\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\r\n *    using the provided `comparator` or an `===` equality check.\r\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\r\n *    becomes the new \"previously emitted value\" internally.\r\n *\r\n * ## Examples\r\n *\r\n * A very basic example with no `comparator`. Note that `1` is emitted more than once,\r\n * because it's distinct in comparison to the _previously emitted_ value,\r\n * not in comparison to _all other emitted values_.\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\r\n *   .pipe(distinctUntilChanged())\r\n *   .subscribe(console.log);\r\n * // Logs: 1, 2, 1, 3\r\n * ```\r\n *\r\n * With a `comparator`, you can do custom comparisons. Let's say\r\n * you only want to emit a value when all of its components have\r\n * changed:\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * const totallyDifferentBuilds$ = of(\r\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\r\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\r\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\r\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\r\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\r\n * ).pipe(\r\n *   distinctUntilChanged((prev, curr) => {\r\n *     return (\r\n *       prev.engineVersion === curr.engineVersion ||\r\n *       prev.transmissionVersion === curr.transmissionVersion\r\n *     );\r\n *   })\r\n * );\r\n *\r\n * totallyDifferentBuilds$.subscribe(console.log);\r\n *\r\n * // Logs:\r\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\r\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\r\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\r\n * ```\r\n *\r\n * You can also provide a custom `comparator` to check that emitted\r\n * changes are only in one direction. Let's say you only want to get\r\n * the next record temperature:\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\r\n *\r\n * const recordHighs$ = temps$.pipe(\r\n *   distinctUntilChanged((prevHigh, temp) => {\r\n *     // If the current temp is less than\r\n *     // or the same as the previous record,\r\n *     // the record hasn't changed.\r\n *     return temp <= prevHigh;\r\n *   })\r\n * );\r\n *\r\n * recordHighs$.subscribe(console.log);\r\n * // Logs: 30, 31, 34, 35\r\n * ```\r\n *\r\n * @param comparator A function used to compare the previous and current values for\r\n * equality. Defaults to a `===` check.\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable with distinct values.\r\n */\r\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\r\n * are distinct in comparison to the last value the result observable emitted.\r\n *\r\n * 1. It will always emit the first value from the source.\r\n * 2. The `keySelector` will be run against all values, including the first value.\r\n * 3. For all values after the first, the selected key will be compared against the key selected from\r\n *    the previously emitted value using the `comparator`.\r\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\r\n *    and the selected key from that value is saved for future comparisons against other keys.\r\n *\r\n * ## Example\r\n *\r\n * Selecting update events only when the `updatedBy` field shows\r\n * the account changed hands...\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * // A stream of updates to a given account\r\n * const accountUpdates$ = of(\r\n *   { updatedBy: 'blesh', data: [] },\r\n *   { updatedBy: 'blesh', data: [] },\r\n *   { updatedBy: 'ncjamieson', data: [] },\r\n *   { updatedBy: 'ncjamieson', data: [] },\r\n *   { updatedBy: 'blesh', data: [] }\r\n * );\r\n *\r\n * // We only want the events where it changed hands\r\n * const changedHands$ = accountUpdates$.pipe(\r\n *   distinctUntilChanged(undefined, update => update.updatedBy)\r\n * );\r\n *\r\n * changedHands$.subscribe(console.log);\r\n * // Logs:\r\n * // { updatedBy: 'blesh', data: Array[0] }\r\n * // { updatedBy: 'ncjamieson', data: Array[0] }\r\n * // { updatedBy: 'blesh', data: Array[0] }\r\n * ```\r\n *\r\n * @param comparator A function used to compare the previous and current keys for\r\n * equality. Defaults to a `===` check.\r\n * @param keySelector Used to select a key value to be passed to the `comparator`.\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable with distinct values.\r\n */\r\nexport function distinctUntilChanged<T, K>(\r\n  comparator: (previous: K, current: K) => boolean,\r\n  keySelector: (value: T) => K\r\n): MonoTypeOperatorFunction<T>;\r\n\r\nexport function distinctUntilChanged<T, K>(\r\n  comparator?: (previous: K, current: K) => boolean,\r\n  keySelector: (value: T) => K = identity as (value: T) => K\r\n): MonoTypeOperatorFunction<T> {\r\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\r\n  // a default value for the parameter, because that will only work\r\n  // for `undefined`.\r\n  comparator = comparator ?? defaultCompare;\r\n\r\n  return operate((source, subscriber) => {\r\n    // The previous key, used to compare against keys selected\r\n    // from new arrivals to determine \"distinctiveness\".\r\n    let previousKey: K;\r\n    // Whether or not this is the first value we've gotten.\r\n    let first = true;\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        // We always call the key selector.\r\n        const currentKey = keySelector(value);\r\n\r\n        // If it's the first value, we always emit it.\r\n        // Otherwise, we compare this key to the previous key, and\r\n        // if the comparer returns false, we emit.\r\n        if (first || !comparator!(previousKey, currentKey)) {\r\n          // Update our state *before* we emit the value\r\n          // as emission can be the source of re-entrant code\r\n          // in functional libraries like this. We only really\r\n          // need to do this if it's the first value, or if the\r\n          // key we're tracking in previous needs to change.\r\n          first = false;\r\n          previousKey = currentKey;\r\n\r\n          // Emit the value!\r\n          subscriber.next(value);\r\n        }\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\nfunction defaultCompare(a: any, b: any) {\r\n  return a === b;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"77b85b616bc94cf0e916026b86fb26e3","cacheData":{"env":{}}}