{"id":"../node_modules/rxjs/dist/esm5/internal/util/identity.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js.map","includedInParent":true,"mtime":1655261656632},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\util\\identity.ts","includedInParent":true,"mtime":1655261656752},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.identity = identity;\n\nfunction identity(x) {\n  return x;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":43,"column":16},"generated":{"line":8,"column":9}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":8,"column":17}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":43,"column":28},"generated":{"line":8,"column":18}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":8,"column":19}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":43,"column":32},"generated":{"line":8,"column":21}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":9,"column":2}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":9,"column":9}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":9,"column":10}},{"source":"../../../../src/internal/util/identity.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":10,"column":0}}],"sources":{"../../../../src/internal/util/identity.ts":"/**\r\n * This function takes one parameter and just returns it. Simply put,\r\n * this is like `<T>(x: T): T => x`.\r\n *\r\n * ## Examples\r\n *\r\n * This is useful in some cases when using things like `mergeMap`\r\n *\r\n * ```ts\r\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\r\n *\r\n * const source$ = interval(1000).pipe(take(5));\r\n *\r\n * const result$ = source$.pipe(\r\n *   map(i => range(i)),\r\n *   mergeMap(identity) // same as mergeMap(x => x)\r\n * );\r\n *\r\n * result$.subscribe({\r\n *   next: console.log\r\n * });\r\n * ```\r\n *\r\n * Or when you want to selectively apply an operator\r\n *\r\n * ```ts\r\n * import { interval, take, identity } from 'rxjs';\r\n *\r\n * const shouldLimit = () => Math.random() < 0.5;\r\n *\r\n * const source$ = interval(1000);\r\n *\r\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\r\n *\r\n * result$.subscribe({\r\n *   next: console.log\r\n * });\r\n * ```\r\n *\r\n * @param x Any value that is returned by this function\r\n * @returns The value passed as the first parameter to this function\r\n */\r\nexport function identity<T>(x: T): T {\r\n  return x;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"f8b58830f637d07ecd22bc3ce4527f45","cacheData":{"env":{}}}