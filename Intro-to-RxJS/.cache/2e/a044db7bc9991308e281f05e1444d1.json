{"id":"../node_modules/rxjs/dist/esm5/internal/operators/finalize.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\finalize.js.map","includedInParent":true,"mtime":1655261656598},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\finalize.ts","includedInParent":true,"mtime":1655261656730},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/lift","loc":{"line":1,"column":24,"index":24},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\finalize.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.finalize = finalize;\n\nvar _lift = require(\"../util/lift\");\n\nfunction finalize(callback) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":17}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":28},"generated":{"line":10,"column":18}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":26}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":48},"generated":{"line":10,"column":28}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":11,"column":13}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":11,"column":26}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":11,"column":28}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":18},"generated":{"line":11,"column":38}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":11,"column":44}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":26},"generated":{"line":11,"column":46}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":11,"column":56}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":36},"generated":{"line":11,"column":58}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":12,"column":8}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":12},"generated":{"line":13,"column":12}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":13,"column":22}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":23},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":13,"column":33}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":71,"column":5},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":14,"column":5}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":14,"column":14}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":17},"generated":{"line":15,"column":17}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":21},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":29}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":73,"column":5},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":17,"column":3}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":75,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../../../../src/internal/operators/finalize.ts":"import { MonoTypeOperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\n/**\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * The specified function will also be called when the subscriber explicitly unsubscribes.\r\n *\r\n * ## Examples\r\n *\r\n * Execute callback function when the observable completes\r\n *\r\n * ```ts\r\n * import { interval, take, finalize } from 'rxjs';\r\n *\r\n * // emit value in sequence every 1 second\r\n * const source = interval(1000);\r\n * const example = source.pipe(\r\n *   take(5), //take only the first 5 values\r\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\r\n * );\r\n * const subscribe = example.subscribe(val => console.log(val));\r\n *\r\n * // results:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * // 'Sequence complete'\r\n * ```\r\n *\r\n * Execute callback function when the subscriber explicitly unsubscribes\r\n *\r\n * ```ts\r\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\r\n *\r\n * const source = interval(100).pipe(\r\n *   finalize(() => console.log('[finalize] Called')),\r\n *   tap({\r\n *     next: () => console.log('[next] Called'),\r\n *     error: () => console.log('[error] Not called'),\r\n *     complete: () => console.log('[tap complete] Not called')\r\n *   })\r\n * );\r\n *\r\n * const sub = source.subscribe({\r\n *   next: x => console.log(x),\r\n *   error: noop,\r\n *   complete: () => console.log('[complete] Not called')\r\n * });\r\n *\r\n * timer(150).subscribe(() => sub.unsubscribe());\r\n *\r\n * // results:\r\n * // '[next] Called'\r\n * // 0\r\n * // '[finalize] Called'\r\n * ```\r\n *\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return A function that returns an Observable that mirrors the source, but\r\n * will call the specified function on termination.\r\n */\r\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\r\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\r\n    try {\r\n      source.subscribe(subscriber);\r\n    } finally {\r\n      subscriber.add(callback);\r\n    }\r\n  });\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"72a6df16af929c056aeed21f3089c69e","cacheData":{"env":{}}}