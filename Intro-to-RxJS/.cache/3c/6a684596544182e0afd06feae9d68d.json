{"id":"../node_modules/rxjs/dist/esm5/internal/operators/partition.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\partition.js.map","includedInParent":true,"mtime":1655261656603},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\partition.ts","includedInParent":true,"mtime":1655261656735},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/not","loc":{"line":1,"column":20,"index":20},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\partition.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\not.js"},{"name":"./filter","loc":{"line":2,"column":23,"index":59},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\partition.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partition = partition;\n\nvar _not = require(\"../util/not\");\n\nvar _filter = require(\"./filter\");\n\nfunction partition(predicate, thisArg) {\n  return function (source) {\n    return [(0, _filter.filter)(predicate, thisArg)(source), (0, _filter.filter)((0, _not.not)(predicate, thisArg))(source)];\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":18}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":28}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":12,"column":30}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":37}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":12,"column":39}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":61,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":13,"column":19}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":61,"column":9},"generated":{"line":13,"column":25}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":61,"column":31},"generated":{"line":13,"column":27}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":14,"column":12}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":14,"column":30}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":14,"column":32}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":14,"column":41}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":23},"generated":{"line":14,"column":43}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":14,"column":50}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":32},"generated":{"line":14,"column":52}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":5},"generated":{"line":14,"column":58}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":14,"column":59}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":41},"generated":{"line":14,"column":61}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":41},"generated":{"line":14,"column":65}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":41},"generated":{"line":14,"column":79}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":14,"column":81}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":14,"column":85}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":14,"column":93}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":52},"generated":{"line":14,"column":95}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":14,"column":104}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":63},"generated":{"line":14,"column":106}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":14,"column":113}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":41},"generated":{"line":14,"column":114}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":73},"generated":{"line":14,"column":116}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":41},"generated":{"line":14,"column":122}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":14,"column":123}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":14,"column":124}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":62,"column":115},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":15,"column":3}},{"source":"../../../../src/internal/operators/partition.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":16,"column":0}}],"sources":{"../../../../src/internal/operators/partition.ts":"import { not } from '../util/not';\r\nimport { filter } from './filter';\r\nimport { Observable } from '../Observable';\r\nimport { UnaryFunction } from '../types';\r\n\r\n/**\r\n * Splits the source Observable into two, one with values that satisfy a\r\n * predicate, and another with values that don't satisfy the predicate.\r\n *\r\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\r\n * one like the output of {@link filter}, and the other with values that did not\r\n * pass the condition.</span>\r\n *\r\n * ![](partition.png)\r\n *\r\n * `partition` outputs an array with two Observables that partition the values\r\n * from the source Observable through the given `predicate` function. The first\r\n * Observable in that array emits source values for which the predicate argument\r\n * returns true. The second Observable emits source values for which the\r\n * predicate returns false. The first behaves like {@link filter} and the second\r\n * behaves like {@link filter} with the predicate negated.\r\n *\r\n * ## Example\r\n *\r\n * Partition click events into those on DIV elements and those elsewhere\r\n *\r\n * ```ts\r\n * import { fromEvent } from 'rxjs';\r\n * import { partition } from 'rxjs/operators';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const [clicksOnDivs, clicksElsewhere] = clicks.pipe(partition(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n *\r\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\r\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\r\n * ```\r\n *\r\n * @see {@link filter}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted on the first Observable in the returned array, if\r\n * `false` the value is emitted on the second Observable in the array. The\r\n * `index` parameter is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return A function that returns an array with two Observables: one with\r\n * values that passed the predicate, and another with values that did not pass\r\n * the predicate.\r\n * @deprecated Replaced with the `partition` static creation function. Will be removed in v8.\r\n */\r\nexport function partition<T>(\r\n  predicate: (value: T, index: number) => boolean,\r\n  thisArg?: any\r\n): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\r\n  return (source: Observable<T>) =>\r\n    [filter(predicate, thisArg)(source), filter(not(predicate, thisArg))(source)] as [Observable<T>, Observable<T>];\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"b9989d897650ce0ceb6a9514764adef2","cacheData":{"env":{}}}