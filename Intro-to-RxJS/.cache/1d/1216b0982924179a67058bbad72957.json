{"id":"../node_modules/rxjs/dist/esm5/internal/operators/min.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\min.js.map","includedInParent":true,"mtime":1655261656602},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\min.ts","includedInParent":true,"mtime":1655261656734},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"./reduce","loc":{"line":1,"column":23,"index":23},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\min.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\reduce.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27,"index":63},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\min.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.min = min;\n\nvar _reduce = require(\"./reduce\");\n\nvar _isFunction = require(\"../util/isFunction\");\n\nfunction min(comparer) {\n  return (0, _reduce.reduce)((0, _isFunction.isFunction)(comparer) ? function (x, y) {\n    return comparer(x, y) < 0 ? x : y;\n  } : function (x, y) {\n    return x < y ? x : y;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":12}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":51,"column":23},"generated":{"line":12,"column":13}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":21}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":51,"column":56},"generated":{"line":12,"column":23}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":13,"column":27}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":29}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":33}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":55}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":27},"generated":{"line":13,"column":57}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":65}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":39},"generated":{"line":13,"column":69}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":40},"generated":{"line":13,"column":79}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":39},"generated":{"line":13,"column":80}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":43},"generated":{"line":13,"column":82}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":39},"generated":{"line":13,"column":83}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":44},"generated":{"line":13,"column":85}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":49},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":50},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":58},"generated":{"line":14,"column":19}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":59},"generated":{"line":14,"column":20}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":58},"generated":{"line":14,"column":21}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":62},"generated":{"line":14,"column":23}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":58},"generated":{"line":14,"column":24}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":50},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":67},"generated":{"line":14,"column":28}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":50},"generated":{"line":14,"column":29}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":71},"generated":{"line":14,"column":32}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":50},"generated":{"line":14,"column":33}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":75},"generated":{"line":14,"column":36}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":49},"generated":{"line":14,"column":37}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":77},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":15,"column":3}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":80},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":81},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":80},"generated":{"line":15,"column":17}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":84},"generated":{"line":15,"column":19}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":80},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":85},"generated":{"line":15,"column":22}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":90},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":91},"generated":{"line":16,"column":11}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":92},"generated":{"line":16,"column":12}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":95},"generated":{"line":16,"column":15}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":91},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":99},"generated":{"line":16,"column":19}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":91},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":103},"generated":{"line":16,"column":23}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":90},"generated":{"line":16,"column":24}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":105},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":17,"column":3}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/min.ts","name":null,"original":{"line":53,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../../../../src/internal/operators/min.ts":"import { reduce } from './reduce';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\r\n * and when source Observable completes it emits a single item: the item with the smallest value.\r\n *\r\n * ![](min.png)\r\n *\r\n * ## Examples\r\n *\r\n * Get the minimal value of a series of numbers\r\n *\r\n * ```ts\r\n * import { of, min } from 'rxjs';\r\n *\r\n * of(5, 4, 7, 2, 8)\r\n *   .pipe(min())\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // 2\r\n * ```\r\n *\r\n * Use a comparer function to get the minimal item\r\n *\r\n * ```ts\r\n * import { of, min } from 'rxjs';\r\n *\r\n * of(\r\n *   { age: 7, name: 'Foo' },\r\n *   { age: 5, name: 'Bar' },\r\n *   { age: 9, name: 'Beer' }\r\n * ).pipe(\r\n *   min((a, b) => a.age < b.age ? -1 : 1)\r\n * )\r\n * .subscribe(x => console.log(x.name));\r\n *\r\n * // Outputs\r\n * // 'Bar'\r\n * ```\r\n *\r\n * @see {@link max}\r\n *\r\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\r\n * value of two items.\r\n * @return A function that returns an Observable that emits item with the\r\n * smallest value.\r\n */\r\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\r\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"04e1bb9289e109f03a2e15097f1d35ab","cacheData":{"env":{}}}