{"id":"../node_modules/rxjs/dist/esm5/internal/observable/iif.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\iif.js.map","includedInParent":true,"mtime":1655261656585},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\observable\\iif.ts","includedInParent":true,"mtime":1655261656723},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"./defer","loc":{"line":1,"column":22,"index":22},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\iif.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\defer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.iif = iif;\n\nvar _defer = require(\"./defer\");\n\nfunction iif(condition, trueResult, falseResult) {\n  return (0, _defer.defer)(function () {\n    return condition() ? trueResult : falseResult;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":12}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":26},"generated":{"line":10,"column":13}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":22}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":52},"generated":{"line":10,"column":24}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":34}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":84},"generated":{"line":10,"column":36}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":47}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":115},"generated":{"line":10,"column":49}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":11,"column":13}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":11,"column":25}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":11,"column":27}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":11,"column":39}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":21},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":22},"generated":{"line":12,"column":11}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":31},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":36},"generated":{"line":12,"column":25}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":31},"generated":{"line":12,"column":35}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":49},"generated":{"line":12,"column":38}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":21},"generated":{"line":12,"column":49}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":61},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":13,"column":3}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":13,"column":4}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":85,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../../../../src/internal/observable/iif.ts":"import { Observable } from '../Observable';\r\nimport { defer } from './defer';\r\nimport { ObservableInput } from '../types';\r\n\r\n/**\r\n * Checks a boolean at subscription time, and chooses between one of two observable sources\r\n *\r\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\r\n * the `trueResult` and the `falseResult`, and returns an Observable.\r\n *\r\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\r\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\r\n * to the source passed as the `falseResult`.\r\n *\r\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\r\n *\r\n * ## Examples\r\n *\r\n * Change at runtime which Observable will be subscribed\r\n *\r\n * ```ts\r\n * import { iif, of } from 'rxjs';\r\n *\r\n * let subscribeToFirst;\r\n * const firstOrSecond = iif(\r\n *   () => subscribeToFirst,\r\n *   of('first'),\r\n *   of('second')\r\n * );\r\n *\r\n * subscribeToFirst = true;\r\n * firstOrSecond.subscribe(value => console.log(value));\r\n *\r\n * // Logs:\r\n * // 'first'\r\n *\r\n * subscribeToFirst = false;\r\n * firstOrSecond.subscribe(value => console.log(value));\r\n *\r\n * // Logs:\r\n * // 'second'\r\n * ```\r\n *\r\n * Control access to an Observable\r\n *\r\n * ```ts\r\n * import { iif, of, EMPTY } from 'rxjs';\r\n *\r\n * let accessGranted;\r\n * const observableIfYouHaveAccess = iif(\r\n *   () => accessGranted,\r\n *   of('It seems you have an access...'),\r\n *   EMPTY\r\n * );\r\n *\r\n * accessGranted = true;\r\n * observableIfYouHaveAccess.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('The end')\r\n * });\r\n *\r\n * // Logs:\r\n * // 'It seems you have an access...'\r\n * // 'The end'\r\n *\r\n * accessGranted = false;\r\n * observableIfYouHaveAccess.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('The end')\r\n * });\r\n *\r\n * // Logs:\r\n * // 'The end'\r\n * ```\r\n *\r\n * @see {@link defer}\r\n *\r\n * @param condition Condition which Observable should be chosen.\r\n * @param trueResult An Observable that will be subscribed if condition is true.\r\n * @param falseResult An Observable that will be subscribed if condition is false.\r\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\r\n */\r\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\r\n  return defer(() => (condition() ? trueResult : falseResult));\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"51e5c27e6e48a6a198ae921e51ea75fb","cacheData":{"env":{}}}