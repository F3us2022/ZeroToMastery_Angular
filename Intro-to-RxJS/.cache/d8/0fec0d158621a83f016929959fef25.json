{"id":"../node_modules/rxjs/dist/esm5/internal/observable/throwError.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\throwError.js.map","includedInParent":true,"mtime":1655261656588},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\observable\\throwError.ts","includedInParent":true,"mtime":1655261656724},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../Observable","loc":{"line":1,"column":27,"index":27},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\throwError.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27,"index":72},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\throwError.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throwError = throwError;\n\nvar _Observable = require(\"../Observable\");\n\nvar _isFunction = require(\"../util/isFunction\");\n\nfunction throwError(errorOrErrorFactory, scheduler) {\n  var errorFactory = (0, _isFunction.isFunction)(errorOrErrorFactory) ? errorOrErrorFactory : function () {\n    return errorOrErrorFactory;\n  };\n\n  var init = function (subscriber) {\n    return subscriber.error(errorFactory());\n  };\n\n  return new _Observable.Observable(scheduler ? function (subscriber) {\n    return scheduler.schedule(init, 0, subscriber);\n  } : init);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":27},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":12,"column":39}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":53},"generated":{"line":12,"column":41}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":12,"column":50}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":121,"column":78},"generated":{"line":12,"column":52}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":20},"generated":{"line":13,"column":18}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":13,"column":21}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":13,"column":25}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":13,"column":47}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":34},"generated":{"line":13,"column":49}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":13,"column":68}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":57},"generated":{"line":13,"column":72}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":13,"column":91}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":79},"generated":{"line":13,"column":94}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":79},"generated":{"line":13,"column":106}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":85},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":85},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":85},"generated":{"line":14,"column":30}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":104},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":15,"column":3}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":8},"generated":{"line":17,"column":6}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":12},"generated":{"line":17,"column":10}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":15},"generated":{"line":17,"column":13}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":16},"generated":{"line":17,"column":23}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":15},"generated":{"line":17,"column":33}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":45},"generated":{"line":17,"column":35}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":50},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":50},"generated":{"line":18,"column":11}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":60},"generated":{"line":18,"column":21}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":61},"generated":{"line":18,"column":22}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":50},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":67},"generated":{"line":18,"column":28}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":79},"generated":{"line":18,"column":40}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":50},"generated":{"line":18,"column":42}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":50},"generated":{"line":18,"column":43}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":82},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":123,"column":2},"generated":{"line":19,"column":3}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":9},"generated":{"line":21,"column":9}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":13},"generated":{"line":21,"column":13}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":9},"generated":{"line":21,"column":35}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":24},"generated":{"line":21,"column":36}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":33},"generated":{"line":21,"column":45}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":36},"generated":{"line":21,"column":48}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":37},"generated":{"line":21,"column":58}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":36},"generated":{"line":21,"column":68}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":47},"generated":{"line":21,"column":70}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":11}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":61},"generated":{"line":22,"column":20}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":62},"generated":{"line":22,"column":21}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":29}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":71},"generated":{"line":22,"column":30}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":34}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":84},"generated":{"line":22,"column":36}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":37}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":87},"generated":{"line":22,"column":39}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":49}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":52},"generated":{"line":22,"column":50}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":98},"generated":{"line":23,"column":2}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":33},"generated":{"line":23,"column":3}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":101},"generated":{"line":23,"column":6}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":9},"generated":{"line":23,"column":10}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":124,"column":2},"generated":{"line":23,"column":11}},{"source":"../../../../src/internal/observable/throwError.ts","name":null,"original":{"line":125,"column":1},"generated":{"line":24,"column":0}}],"sources":{"../../../../src/internal/observable/throwError.ts":"import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { SchedulerLike } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * Creates an observable that will create an error instance and push it to the consumer as an error\r\n * immediately upon subscription.\r\n *\r\n * <span class=\"informal\">Just errors and does nothing else</span>\r\n *\r\n * ![](throw.png)\r\n *\r\n * This creation function is useful for creating an observable that will create an error and error every\r\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\r\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\r\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\r\n * that up and notify the consumer of the error.\r\n *\r\n * ## Example\r\n *\r\n * Create a simple observable that will create a new error with a timestamp and log it\r\n * and the message every time you subscribe to it\r\n *\r\n * ```ts\r\n * import { throwError } from 'rxjs';\r\n *\r\n * let errorCount = 0;\r\n *\r\n * const errorWithTimestamp$ = throwError(() => {\r\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\r\n *   error.timestamp = Date.now();\r\n *   return error;\r\n * });\r\n *\r\n * errorWithTimestamp$.subscribe({\r\n *   error: err => console.log(err.timestamp, err.message)\r\n * });\r\n *\r\n * errorWithTimestamp$.subscribe({\r\n *   error: err => console.log(err.timestamp, err.message)\r\n * });\r\n *\r\n * // Logs the timestamp and a new error message for each subscription\r\n * ```\r\n *\r\n * ### Unnecessary usage\r\n *\r\n * Using `throwError` inside of an operator or creation function\r\n * with a callback, is usually not necessary\r\n *\r\n * ```ts\r\n * import { of, concatMap, timer, throwError } from 'rxjs';\r\n *\r\n * const delays$ = of(1000, 2000, Infinity, 3000);\r\n *\r\n * delays$.pipe(\r\n *   concatMap(ms => {\r\n *     if (ms < 10000) {\r\n *       return timer(ms);\r\n *     } else {\r\n *       // This is probably overkill.\r\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * You can just throw the error instead\r\n *\r\n * ```ts\r\n * import { of, concatMap, timer } from 'rxjs';\r\n *\r\n * const delays$ = of(1000, 2000, Infinity, 3000);\r\n *\r\n * delays$.pipe(\r\n *   concatMap(ms => {\r\n *     if (ms < 10000) {\r\n *       return timer(ms);\r\n *     } else {\r\n *       // Cleaner and easier to read for most folks.\r\n *       throw new Error(`Invalid time ${ ms }`);\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * @param errorFactory A factory function that will create the error instance that is pushed.\r\n */\r\nexport function throwError(errorFactory: () => any): Observable<never>;\r\n\r\n/**\r\n * Returns an observable that will error with the specified error immediately upon subscription.\r\n *\r\n * @param error The error instance to emit\r\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\r\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\r\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\r\n */\r\nexport function throwError(error: any): Observable<never>;\r\n\r\n/**\r\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\r\n *\r\n * @param errorOrErrorFactory An error instance or error factory\r\n * @param scheduler A scheduler to use to schedule the error notification\r\n * @deprecated The `scheduler` parameter will be removed in v8.\r\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\r\n * Details: https://rxjs.dev/deprecations/scheduler-argument\r\n */\r\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\r\n\r\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\r\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\r\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\r\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"f4afd0431cffec44f20ce30463684bbe","cacheData":{"env":{}}}