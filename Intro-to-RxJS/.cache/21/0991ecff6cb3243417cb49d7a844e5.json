{"id":"../node_modules/rxjs/dist/esm5/internal/operators/sampleTime.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js.map","includedInParent":true,"mtime":1655261656607},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\sampleTime.ts","includedInParent":true,"mtime":1655261656737},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../scheduler/async","loc":{"line":1,"column":31,"index":31},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\scheduler\\async.js"},{"name":"./sample","loc":{"line":2,"column":23,"index":77},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sample.js"},{"name":"../observable/interval","loc":{"line":3,"column":25,"index":115},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\interval.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sampleTime = sampleTime;\n\nvar _async = require(\"../scheduler/async\");\n\nvar _sample = require(\"./sample\");\n\nvar _interval = require(\"../observable/interval\");\n\nfunction sampleTime(period, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = _async.asyncScheduler;\n  }\n\n  return (0, _sample.sample)((0, _interval.interval)(period, scheduler));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":14,"column":19}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":30},"generated":{"line":14,"column":20}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":14,"column":26}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":14,"column":28}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":14,"column":37}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":87},"generated":{"line":14,"column":39}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":15}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":25}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":26}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":16,"column":13}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":46},"generated":{"line":16,"column":37}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":87},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":19,"column":13}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":19,"column":27}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":19,"column":29}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":19,"column":33}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":19,"column":51}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":19,"column":53}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":19,"column":59}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":33},"generated":{"line":19,"column":61}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":19,"column":70}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":19,"column":71}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":19,"column":72}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":51,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../../../src/internal/operators/sampleTime.ts":"import { asyncScheduler } from '../scheduler/async';\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { sample } from './sample';\r\nimport { interval } from '../observable/interval';\r\n\r\n/**\r\n * Emits the most recently emitted value from the source Observable within\r\n * periodic time intervals.\r\n *\r\n * <span class=\"informal\">Samples the source Observable at periodic time\r\n * intervals, emitting what it samples.</span>\r\n *\r\n * ![](sampleTime.png)\r\n *\r\n * `sampleTime` periodically looks at the source Observable and emits whichever\r\n * value it has most recently emitted since the previous sampling, unless the\r\n * source has not emitted anything since the previous sampling. The sampling\r\n * happens periodically in time every `period` milliseconds (or the time unit\r\n * defined by the optional `scheduler` argument). The sampling starts as soon as\r\n * the output Observable is subscribed.\r\n *\r\n * ## Example\r\n *\r\n * Every second, emit the most recent click at most once\r\n *\r\n * ```ts\r\n * import { fromEvent, sampleTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(sampleTime(1000));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sample}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {number} period The sampling period expressed in milliseconds or the\r\n * time unit determined internally by the optional `scheduler`.\r\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\r\n * managing the timers that handle the sampling.\r\n * @return A function that returns an Observable that emits the results of\r\n * sampling the values emitted by the source Observable at the specified time\r\n * interval.\r\n */\r\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\r\n  return sample(interval(period, scheduler));\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"52d7374303d07e3335f01a5ec19d17c5","cacheData":{"env":{}}}