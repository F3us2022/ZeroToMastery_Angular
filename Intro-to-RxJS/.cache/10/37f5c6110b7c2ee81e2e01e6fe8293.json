{"id":"../node_modules/rxjs/dist/esm5/internal/operators/skip.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\skip.js.map","includedInParent":true,"mtime":1655261656609},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\skip.ts","includedInParent":true,"mtime":1655261656738},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"./filter","loc":{"line":1,"column":23,"index":23},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\skip.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.skip = skip;\n\nvar _filter = require(\"./filter\");\n\nfunction skip(count) {\n  return (0, _filter.filter)(function (_, index) {\n    return count <= index;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":37,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":10,"column":13}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":37,"column":24},"generated":{"line":10,"column":14}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":10,"column":19}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":37,"column":37},"generated":{"line":10,"column":21}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":11,"column":13}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":11,"column":27}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":11,"column":29}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":17},"generated":{"line":11,"column":39}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":11,"column":40}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":11,"column":42}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":11,"column":47}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":11,"column":49}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":12,"column":11}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":35},"generated":{"line":12,"column":16}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":39},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":12,"column":25}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":44},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":13,"column":3}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":13,"column":4}},{"source":"../../../../src/internal/operators/skip.ts","name":null,"original":{"line":39,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../../../../src/internal/operators/skip.ts":"import { MonoTypeOperatorFunction } from '../types';\r\nimport { filter } from './filter';\r\n\r\n/**\r\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\r\n *\r\n * ![](skip.png)\r\n *\r\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\r\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\r\n *\r\n * ## Example\r\n *\r\n * Skip the values before the emission\r\n *\r\n * ```ts\r\n * import { interval, skip } from 'rxjs';\r\n *\r\n * // emit every half second\r\n * const source = interval(500);\r\n * // skip the first 10 emitted values\r\n * const result = source.pipe(skip(10));\r\n *\r\n * result.subscribe(value => console.log(value));\r\n * // output: 10...11...12...13...\r\n * ```\r\n *\r\n * @see {@link last}\r\n * @see {@link skipWhile}\r\n * @see {@link skipUntil}\r\n * @see {@link skipLast}\r\n *\r\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\r\n * @return A function that returns an Observable that skips the first `count`\r\n * values emitted by the source Observable.\r\n */\r\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\r\n  return filter((_, index) => count <= index);\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"af4be946a39ee5b56bcdfbd3d9b1f463","cacheData":{"env":{}}}