{"id":"index.js","dependencies":[{"name":"/Users/raul/Desktop/Work/ZeroToMastery_Angular/Intro-to-RxJS/package.json","includedInParent":true,"mtime":1625261732000},{"name":"rxjs","loc":{"line":247,"column":19,"index":5614},"parent":"/Users/raul/Desktop/Work/ZeroToMastery_Angular/Intro-to-RxJS/src/index.js","resolved":"/Users/raul/Desktop/Work/ZeroToMastery_Angular/Intro-to-RxJS/node_modules/rxjs/dist/esm5/index.js"},{"name":"rxjs/operators","loc":{"line":248,"column":20,"index":5642},"parent":"/Users/raul/Desktop/Work/ZeroToMastery_Angular/Intro-to-RxJS/src/index.js","resolved":"/Users/raul/Desktop/Work/ZeroToMastery_Angular/Intro-to-RxJS/node_modules/rxjs/dist/esm5/operators/index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\n//Observable Example\n// import { Observable } from 'rxjs';\n// const obs = new Observable((subscriber) => {\n//     subscriber.next('Data Stream One');\n//     subscriber.next('Data Stream two');\n//     subscriber.complete();\n//     subscriber.next('Data Stream Three');\n//     subscriber.error('test error');\n//  });\n// obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n//Observable Example\n// const obs = new Observable((subscriber) => {\n//     subscriber.next('Data Stream One');\n//     subscriber.next('Data Stream two');\n//     subscriber.complete();\n//     subscriber.next('Data Stream Three');\n//     subscriber.error('test error');\n//  });\n// obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n//----------------------------------------- Synchronous Observable ----------------------------------------------------\n\n/*\n\nconst obs = new Observable((subscriber) => {\n    subscriber.next('observer');\n})\n\nconsole.log('Before Subscribing');\n\nconsole.log('Before');\n\nobs.subscribe({\n    next: (value) => {\n        console.log(value)\n    },\n    complete: () => { console.log('complete called') },\n    error: (err)=>{console.log(err)}\n})\n\n\nconsole.log('After');\n\n*/\n//\n//\n//----------------------------------------- ASynchronous Observable ----------------------------------------------------\n//\n//With memory leak\n// const obs = new Observable((subscriber) => {\n//     setInterval(() => {\n//         subscriber.next('text')\n//     console.log(`memory leak even after 'subscriber.complete' is called`)}, 1000) //memory leak\n//     subscriber.complete();\n//  });\n// console.log('Before');\n// obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n// console.log('After');\n//----------------******************* Without memory leak ********************---------------------\n\n/*\n\nconst obs = new Observable((subscriber) => {\n    const id = setInterval(() => {\n        subscriber.next('text')\n    console.log(`memory leak even after 'subscriber.complete' is called`)}, 1000) //memory leak\n    subscriber.complete();\n\n    return ()=>{ \n        clearInterval(id);\n    }\n });\n\nconsole.log('Before');\n\nobs.subscribe({\n    next: (value) => {\n        console.log(value)\n    },\n    complete: () => { console.log('complete called') },\n    error: (err)=>{console.log(err)}\n})\n\nconsole.log('After');\n\n*/\n//\n//------------------------------------- ASynchronous Observable (UNSUBSCRIBE)-------------------------------------------\n// const obs = new Observable((subscriber) => {\n//     const id = setInterval(() => {\n//         subscriber.next('text')\n//     console.log(`memory leak even after 'subscriber.complete' is called`)}, 1000) //memory leak\n//     return ()=>{ \n//         clearInterval(id);\n//     }\n//  });\n// const subscriber = obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n// setTimeout(() => {subscriber.unsubscribe()},4000)\n//\n//\n//------------------------------------- Declarative Programming with OPERATORS-------------------------------------------\n//\n//------------------- Use of OPERATOR INTERVAL -----------\n// import { interval } from 'rxjs';\n// const obs = new interval(1000);\n// const subscriber = obs.subscribe(\n//     console.log\n// )\n//------------------- Use of OPERATOR TIMER --------------\n// import { timer } from 'rxjs'\n// const obs = new timer(0, 1000);\n// const subscriber = obs.subscribe(console.log);\n//\n//--------------------------------------------------- DOM Event OPERATORS-------------------------------------------------\n//\n// import { from, fromEvent } from 'rxjs'\n// const obs = new fromEvent(\n//     document, 'click'\n// );\n// const subscriber = obs.subscribe(console.log);\n//\n//--------------------------------------------------- Of and From OPERATORS----------------------------------------------\n//\n//---------------------- OF Operator ------------------\n//import { of ,from} from 'rxjs'\n//const obs = of(1, 2, 3, 4, 5);   \n//const obs = of([1, 2, 3, 4, 5]);   //cant show array elements individually\n// const subs = obs.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n//---- OF retruns PROMISE\n// const obs = of(fetch('https://jsonplaceholder.typicode.com/todos/1'));   //cant show array elements individually\n// const subs = obs.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n//\n//---------------------- FOR Operator\n//\n// const obsFor = from([1, 2, 3, 4, 5]);   //cant show array elements individually\n// const subsFor = obsFor.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n//------ FROM returns values\n// const obsFor = from(fetch('https://jsonplaceholder.typicode.com/todos/1'));   //cant show array elements individually\n// const subsFor = obsFor.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n//\n//--------------------------------------------------- MAP OPERATORS----------------------------------------------\n//\nvar obs = (0, _rxjs.of)(1, 2, 3, 4, 5).pipe((0, _operators.map)(function (value) {\n  return \"$\".concat(value);\n}));\nvar subs = obs.subscribe({\n  next: function next(value) {\n    console.log(value);\n  },\n  complete: function complete() {\n    console.log('complete');\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":247,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":248,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":14,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":18,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":25,"column":0}},{"generated":{"line":26,"column":0},"source":"index.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":32,"column":0}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":33,"column":0}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":34,"column":0}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":35,"column":0}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":36,"column":0}},{"generated":{"line":36,"column":0},"source":"index.js","original":{"line":37,"column":0}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":38,"column":0},"source":"index.js","original":{"line":41,"column":0}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":43,"column":0}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":44,"column":0}},{"generated":{"line":42,"column":0},"source":"index.js","original":{"line":45,"column":0}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":46,"column":0}},{"generated":{"line":44,"column":0},"source":"index.js","original":{"line":47,"column":0}},{"generated":{"line":45,"column":0},"source":"index.js","original":{"line":48,"column":0}},{"generated":{"line":46,"column":0},"source":"index.js","original":{"line":49,"column":0}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":50,"column":0}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":51,"column":0}},{"generated":{"line":49,"column":0},"source":"index.js","original":{"line":52,"column":0}},{"generated":{"line":50,"column":0},"source":"index.js","original":{"line":53,"column":0}},{"generated":{"line":51,"column":0},"source":"index.js","original":{"line":54,"column":0}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":55,"column":0}},{"generated":{"line":53,"column":0},"source":"index.js","original":{"line":56,"column":0}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":57,"column":0}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":58,"column":0}},{"generated":{"line":56,"column":0},"source":"index.js","original":{"line":59,"column":0}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":60,"column":0}},{"generated":{"line":58,"column":0},"source":"index.js","original":{"line":61,"column":0}},{"generated":{"line":59,"column":0},"source":"index.js","original":{"line":62,"column":0}},{"generated":{"line":60,"column":0},"source":"index.js","original":{"line":63,"column":0}},{"generated":{"line":61,"column":0},"source":"index.js","original":{"line":64,"column":0}},{"generated":{"line":62,"column":0},"source":"index.js","original":{"line":66,"column":0}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":68,"column":0}},{"generated":{"line":64,"column":0},"source":"index.js","original":{"line":71,"column":0}},{"generated":{"line":65,"column":0},"source":"index.js","original":{"line":73,"column":0}},{"generated":{"line":66,"column":0},"source":"index.js","original":{"line":75,"column":0}},{"generated":{"line":67,"column":0},"source":"index.js","original":{"line":77,"column":0}},{"generated":{"line":68,"column":0},"source":"index.js","original":{"line":78,"column":0}},{"generated":{"line":69,"column":0},"source":"index.js","original":{"line":79,"column":0}},{"generated":{"line":70,"column":0},"source":"index.js","original":{"line":80,"column":0}},{"generated":{"line":71,"column":0},"source":"index.js","original":{"line":81,"column":0}},{"generated":{"line":72,"column":0},"source":"index.js","original":{"line":82,"column":0}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":84,"column":0}},{"generated":{"line":74,"column":0},"source":"index.js","original":{"line":86,"column":0}},{"generated":{"line":75,"column":0},"source":"index.js","original":{"line":87,"column":0}},{"generated":{"line":76,"column":0},"source":"index.js","original":{"line":88,"column":0}},{"generated":{"line":77,"column":0},"source":"index.js","original":{"line":89,"column":0}},{"generated":{"line":78,"column":0},"source":"index.js","original":{"line":90,"column":0}},{"generated":{"line":79,"column":0},"source":"index.js","original":{"line":91,"column":0}},{"generated":{"line":80,"column":0},"source":"index.js","original":{"line":92,"column":0}},{"generated":{"line":81,"column":0},"source":"index.js","original":{"line":94,"column":0}},{"generated":{"line":82,"column":0},"source":"index.js","original":{"line":96,"column":0}},{"generated":{"line":84,"column":0},"source":"index.js","original":{"line":98,"column":0}},{"generated":{"line":85,"column":0},"source":"index.js","original":{"line":99,"column":0}},{"generated":{"line":86,"column":0},"source":"index.js","original":{"line":100,"column":0}},{"generated":{"line":87,"column":0},"source":"index.js","original":{"line":101,"column":0}},{"generated":{"line":88,"column":0},"source":"index.js","original":{"line":102,"column":0}},{"generated":{"line":89,"column":0},"source":"index.js","original":{"line":103,"column":0}},{"generated":{"line":90,"column":0},"source":"index.js","original":{"line":104,"column":0}},{"generated":{"line":91,"column":0},"source":"index.js","original":{"line":105,"column":0}},{"generated":{"line":92,"column":0},"source":"index.js","original":{"line":106,"column":0}},{"generated":{"line":93,"column":0},"source":"index.js","original":{"line":107,"column":0}},{"generated":{"line":94,"column":0},"source":"index.js","original":{"line":108,"column":0}},{"generated":{"line":95,"column":0},"source":"index.js","original":{"line":109,"column":0}},{"generated":{"line":96,"column":0},"source":"index.js","original":{"line":110,"column":0}},{"generated":{"line":97,"column":0},"source":"index.js","original":{"line":111,"column":0}},{"generated":{"line":98,"column":0},"source":"index.js","original":{"line":112,"column":0}},{"generated":{"line":99,"column":0},"source":"index.js","original":{"line":113,"column":0}},{"generated":{"line":100,"column":0},"source":"index.js","original":{"line":114,"column":0}},{"generated":{"line":101,"column":0},"source":"index.js","original":{"line":115,"column":0}},{"generated":{"line":102,"column":0},"source":"index.js","original":{"line":116,"column":0}},{"generated":{"line":103,"column":0},"source":"index.js","original":{"line":117,"column":0}},{"generated":{"line":104,"column":0},"source":"index.js","original":{"line":118,"column":0}},{"generated":{"line":105,"column":0},"source":"index.js","original":{"line":119,"column":0}},{"generated":{"line":106,"column":0},"source":"index.js","original":{"line":120,"column":0}},{"generated":{"line":107,"column":0},"source":"index.js","original":{"line":121,"column":0}},{"generated":{"line":108,"column":0},"source":"index.js","original":{"line":122,"column":0}},{"generated":{"line":109,"column":0},"source":"index.js","original":{"line":123,"column":0}},{"generated":{"line":110,"column":0},"source":"index.js","original":{"line":125,"column":0}},{"generated":{"line":111,"column":0},"source":"index.js","original":{"line":127,"column":0}},{"generated":{"line":112,"column":0},"source":"index.js","original":{"line":129,"column":0}},{"generated":{"line":113,"column":0},"source":"index.js","original":{"line":130,"column":0}},{"generated":{"line":114,"column":0},"source":"index.js","original":{"line":131,"column":0}},{"generated":{"line":115,"column":0},"source":"index.js","original":{"line":132,"column":0}},{"generated":{"line":116,"column":0},"source":"index.js","original":{"line":134,"column":0}},{"generated":{"line":117,"column":0},"source":"index.js","original":{"line":135,"column":0}},{"generated":{"line":118,"column":0},"source":"index.js","original":{"line":136,"column":0}},{"generated":{"line":119,"column":0},"source":"index.js","original":{"line":137,"column":0}},{"generated":{"line":120,"column":0},"source":"index.js","original":{"line":140,"column":0}},{"generated":{"line":121,"column":0},"source":"index.js","original":{"line":141,"column":0}},{"generated":{"line":122,"column":0},"source":"index.js","original":{"line":142,"column":0}},{"generated":{"line":123,"column":0},"source":"index.js","original":{"line":143,"column":0}},{"generated":{"line":124,"column":0},"source":"index.js","original":{"line":144,"column":0}},{"generated":{"line":125,"column":0},"source":"index.js","original":{"line":145,"column":0}},{"generated":{"line":126,"column":0},"source":"index.js","original":{"line":146,"column":0}},{"generated":{"line":127,"column":0},"source":"index.js","original":{"line":148,"column":0}},{"generated":{"line":128,"column":0},"source":"index.js","original":{"line":150,"column":0}},{"generated":{"line":129,"column":0},"source":"index.js","original":{"line":152,"column":0}},{"generated":{"line":130,"column":0},"source":"index.js","original":{"line":155,"column":0}},{"generated":{"line":131,"column":0},"source":"index.js","original":{"line":158,"column":0}},{"generated":{"line":132,"column":0},"source":"index.js","original":{"line":160,"column":0}},{"generated":{"line":133,"column":0},"source":"index.js","original":{"line":162,"column":0}},{"generated":{"line":134,"column":0},"source":"index.js","original":{"line":164,"column":0}},{"generated":{"line":135,"column":0},"source":"index.js","original":{"line":167,"column":0}},{"generated":{"line":136,"column":0},"source":"index.js","original":{"line":168,"column":0}},{"generated":{"line":137,"column":0},"source":"index.js","original":{"line":169,"column":0}},{"generated":{"line":138,"column":0},"source":"index.js","original":{"line":171,"column":0}},{"generated":{"line":139,"column":0},"source":"index.js","original":{"line":173,"column":0}},{"generated":{"line":140,"column":0},"source":"index.js","original":{"line":175,"column":0}},{"generated":{"line":141,"column":0},"source":"index.js","original":{"line":177,"column":0}},{"generated":{"line":142,"column":0},"source":"index.js","original":{"line":179,"column":0}},{"generated":{"line":143,"column":0},"source":"index.js","original":{"line":181,"column":0}},{"generated":{"line":144,"column":0},"source":"index.js","original":{"line":183,"column":0}},{"generated":{"line":145,"column":0},"source":"index.js","original":{"line":185,"column":0}},{"generated":{"line":146,"column":0},"source":"index.js","original":{"line":187,"column":0}},{"generated":{"line":147,"column":0},"source":"index.js","original":{"line":188,"column":0}},{"generated":{"line":148,"column":0},"source":"index.js","original":{"line":189,"column":0}},{"generated":{"line":149,"column":0},"source":"index.js","original":{"line":191,"column":0}},{"generated":{"line":150,"column":0},"source":"index.js","original":{"line":193,"column":0}},{"generated":{"line":151,"column":0},"source":"index.js","original":{"line":195,"column":0}},{"generated":{"line":152,"column":0},"source":"index.js","original":{"line":197,"column":0}},{"generated":{"line":153,"column":0},"source":"index.js","original":{"line":199,"column":0}},{"generated":{"line":154,"column":0},"source":"index.js","original":{"line":201,"column":0}},{"generated":{"line":155,"column":0},"source":"index.js","original":{"line":203,"column":0}},{"generated":{"line":156,"column":0},"source":"index.js","original":{"line":204,"column":0}},{"generated":{"line":157,"column":0},"source":"index.js","original":{"line":206,"column":0}},{"generated":{"line":158,"column":0},"source":"index.js","original":{"line":207,"column":0}},{"generated":{"line":159,"column":0},"source":"index.js","original":{"line":208,"column":0}},{"generated":{"line":160,"column":0},"source":"index.js","original":{"line":209,"column":0}},{"generated":{"line":161,"column":0},"source":"index.js","original":{"line":211,"column":0}},{"generated":{"line":162,"column":0},"source":"index.js","original":{"line":213,"column":0}},{"generated":{"line":163,"column":0},"source":"index.js","original":{"line":215,"column":0}},{"generated":{"line":164,"column":0},"source":"index.js","original":{"line":216,"column":0}},{"generated":{"line":165,"column":0},"source":"index.js","original":{"line":217,"column":0}},{"generated":{"line":166,"column":0},"source":"index.js","original":{"line":218,"column":0}},{"generated":{"line":167,"column":0},"source":"index.js","original":{"line":220,"column":0}},{"generated":{"line":168,"column":0},"source":"index.js","original":{"line":221,"column":0}},{"generated":{"line":169,"column":0},"source":"index.js","original":{"line":222,"column":0}},{"generated":{"line":170,"column":0},"source":"index.js","original":{"line":224,"column":0}},{"generated":{"line":171,"column":0},"source":"index.js","original":{"line":226,"column":0}},{"generated":{"line":172,"column":0},"source":"index.js","original":{"line":227,"column":0}},{"generated":{"line":173,"column":0},"source":"index.js","original":{"line":228,"column":0}},{"generated":{"line":174,"column":0},"source":"index.js","original":{"line":229,"column":0}},{"generated":{"line":175,"column":0},"source":"index.js","original":{"line":231,"column":0}},{"generated":{"line":176,"column":0},"source":"index.js","original":{"line":233,"column":0}},{"generated":{"line":177,"column":0},"source":"index.js","original":{"line":235,"column":0}},{"generated":{"line":178,"column":0},"source":"index.js","original":{"line":236,"column":0}},{"generated":{"line":179,"column":0},"source":"index.js","original":{"line":237,"column":0}},{"generated":{"line":180,"column":0},"source":"index.js","original":{"line":238,"column":0}},{"generated":{"line":181,"column":0},"source":"index.js","original":{"line":241,"column":0}},{"generated":{"line":182,"column":0},"source":"index.js","original":{"line":243,"column":0}},{"generated":{"line":183,"column":0},"source":"index.js","original":{"line":245,"column":0}},{"generated":{"line":184,"column":0},"source":"index.js","original":{"line":250,"column":0}},{"generated":{"line":184,"column":4},"source":"index.js","original":{"line":250,"column":6},"name":"obs"},{"generated":{"line":184,"column":7},"source":"index.js","original":{"line":250,"column":9}},{"generated":{"line":184,"column":10},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":14},"source":"index.js","original":{"line":250,"column":12},"name":"of"},{"generated":{"line":184,"column":22},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":24},"source":"index.js","original":{"line":250,"column":15}},{"generated":{"line":184,"column":25},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":27},"source":"index.js","original":{"line":250,"column":18}},{"generated":{"line":184,"column":28},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":30},"source":"index.js","original":{"line":250,"column":21}},{"generated":{"line":184,"column":31},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":33},"source":"index.js","original":{"line":250,"column":24}},{"generated":{"line":184,"column":34},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":36},"source":"index.js","original":{"line":250,"column":27}},{"generated":{"line":184,"column":37},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":39},"source":"index.js","original":{"line":250,"column":30},"name":"pipe"},{"generated":{"line":184,"column":43},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":184,"column":44},"source":"index.js","original":{"line":251,"column":4}},{"generated":{"line":184,"column":48},"source":"index.js","original":{"line":251,"column":4},"name":"map"},{"generated":{"line":184,"column":62},"source":"index.js","original":{"line":251,"column":4}},{"generated":{"line":184,"column":64},"source":"index.js","original":{"line":251,"column":8}},{"generated":{"line":184,"column":74},"source":"index.js","original":{"line":251,"column":9},"name":"value"},{"generated":{"line":184,"column":79},"source":"index.js","original":{"line":251,"column":8}},{"generated":{"line":185,"column":2},"source":"index.js","original":{"line":251,"column":8}},{"generated":{"line":185,"column":20},"source":"index.js","original":{"line":251,"column":21},"name":"value"},{"generated":{"line":185,"column":25},"source":"index.js","original":{"line":251,"column":8}},{"generated":{"line":186,"column":0},"source":"index.js","original":{"line":251,"column":8}},{"generated":{"line":186,"column":1},"source":"index.js","original":{"line":251,"column":4}},{"generated":{"line":186,"column":2},"source":"index.js","original":{"line":250,"column":12}},{"generated":{"line":186,"column":3},"source":"index.js","original":{"line":250,"column":0}},{"generated":{"line":187,"column":0},"source":"index.js","original":{"line":254,"column":0}},{"generated":{"line":187,"column":4},"source":"index.js","original":{"line":254,"column":6},"name":"subs"},{"generated":{"line":187,"column":8},"source":"index.js","original":{"line":254,"column":10}},{"generated":{"line":187,"column":11},"source":"index.js","original":{"line":254,"column":13},"name":"obs"},{"generated":{"line":187,"column":14},"source":"index.js","original":{"line":254,"column":16}},{"generated":{"line":187,"column":15},"source":"index.js","original":{"line":254,"column":17},"name":"subscribe"},{"generated":{"line":187,"column":24},"source":"index.js","original":{"line":254,"column":13}},{"generated":{"line":187,"column":25},"source":"index.js","original":{"line":254,"column":27}},{"generated":{"line":188,"column":2},"source":"index.js","original":{"line":255,"column":4},"name":"next"},{"generated":{"line":188,"column":6},"source":"index.js","original":{"line":254,"column":27}},{"generated":{"line":188,"column":22},"source":"index.js","original":{"line":255,"column":9},"name":"value"},{"generated":{"line":188,"column":27},"source":"index.js","original":{"line":254,"column":27}},{"generated":{"line":188,"column":29},"source":"index.js","original":{"line":255,"column":16}},{"generated":{"line":189,"column":4},"source":"index.js","original":{"line":255,"column":18},"name":"console"},{"generated":{"line":189,"column":11},"source":"index.js","original":{"line":255,"column":25}},{"generated":{"line":189,"column":12},"source":"index.js","original":{"line":255,"column":26},"name":"log"},{"generated":{"line":189,"column":15},"source":"index.js","original":{"line":255,"column":18}},{"generated":{"line":189,"column":16},"source":"index.js","original":{"line":255,"column":30},"name":"value"},{"generated":{"line":189,"column":21},"source":"index.js","original":{"line":255,"column":18}},{"generated":{"line":190,"column":2},"source":"index.js","original":{"line":255,"column":38}},{"generated":{"line":190,"column":3},"source":"index.js","original":{"line":254,"column":27}},{"generated":{"line":191,"column":2},"source":"index.js","original":{"line":256,"column":4},"name":"complete"},{"generated":{"line":191,"column":10},"source":"index.js","original":{"line":254,"column":27}},{"generated":{"line":191,"column":32},"source":"index.js","original":{"line":256,"column":15}},{"generated":{"line":192,"column":4},"source":"index.js","original":{"line":256,"column":17},"name":"console"},{"generated":{"line":192,"column":11},"source":"index.js","original":{"line":256,"column":24}},{"generated":{"line":192,"column":12},"source":"index.js","original":{"line":256,"column":25},"name":"log"},{"generated":{"line":192,"column":15},"source":"index.js","original":{"line":256,"column":17}},{"generated":{"line":192,"column":16},"source":"index.js","original":{"line":256,"column":29}},{"generated":{"line":192,"column":26},"source":"index.js","original":{"line":256,"column":17}},{"generated":{"line":193,"column":2},"source":"index.js","original":{"line":256,"column":41}},{"generated":{"line":194,"column":0},"source":"index.js","original":{"line":254,"column":27}},{"generated":{"line":194,"column":1},"source":"index.js","original":{"line":254,"column":13}},{"generated":{"line":194,"column":2},"source":"index.js","original":{"line":254,"column":0}}],"sources":{"index.js":"//Observable Example\n\n// import { Observable } from 'rxjs';\n\n// const obs = new Observable((subscriber) => {\n//     subscriber.next('Data Stream One');\n//     subscriber.next('Data Stream two');\n//     subscriber.complete();\n//     subscriber.next('Data Stream Three');\n//     subscriber.error('test error');\n//  });\n\n// obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n\n//Observable Example\n\n\n// const obs = new Observable((subscriber) => {\n//     subscriber.next('Data Stream One');\n//     subscriber.next('Data Stream two');\n//     subscriber.complete();\n//     subscriber.next('Data Stream Three');\n//     subscriber.error('test error');\n//  });\n\n// obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n\n\n//----------------------------------------- Synchronous Observable ----------------------------------------------------\n\n/*\n\nconst obs = new Observable((subscriber) => {\n    subscriber.next('observer');\n})\n\nconsole.log('Before Subscribing');\n\nconsole.log('Before');\n\nobs.subscribe({\n    next: (value) => {\n        console.log(value)\n    },\n    complete: () => { console.log('complete called') },\n    error: (err)=>{console.log(err)}\n})\n\n\nconsole.log('After');\n\n*/\n\n//\n\n//\n\n\n//----------------------------------------- ASynchronous Observable ----------------------------------------------------\n\n//\n\n//With memory leak\n\n// const obs = new Observable((subscriber) => {\n//     setInterval(() => {\n//         subscriber.next('text')\n//     console.log(`memory leak even after 'subscriber.complete' is called`)}, 1000) //memory leak\n//     subscriber.complete();\n//  });\n\n// console.log('Before');\n\n// obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n\n// console.log('After');\n\n//----------------******************* Without memory leak ********************---------------------\n\n/*\n\nconst obs = new Observable((subscriber) => {\n    const id = setInterval(() => {\n        subscriber.next('text')\n    console.log(`memory leak even after 'subscriber.complete' is called`)}, 1000) //memory leak\n    subscriber.complete();\n\n    return ()=>{ \n        clearInterval(id);\n    }\n });\n\nconsole.log('Before');\n\nobs.subscribe({\n    next: (value) => {\n        console.log(value)\n    },\n    complete: () => { console.log('complete called') },\n    error: (err)=>{console.log(err)}\n})\n\nconsole.log('After');\n\n*/\n\n//\n\n//------------------------------------- ASynchronous Observable (UNSUBSCRIBE)-------------------------------------------\n\n// const obs = new Observable((subscriber) => {\n//     const id = setInterval(() => {\n//         subscriber.next('text')\n//     console.log(`memory leak even after 'subscriber.complete' is called`)}, 1000) //memory leak\n\n//     return ()=>{ \n//         clearInterval(id);\n//     }\n//  });\n\n\n// const subscriber = obs.subscribe({\n//     next: (value) => {\n//         console.log(value)\n//     },\n//     complete: () => { console.log('complete called') },\n//     error: (err)=>{console.log(err)}\n// })\n\n// setTimeout(() => {subscriber.unsubscribe()},4000)\n\n//\n\n//\n\n\n//------------------------------------- Declarative Programming with OPERATORS-------------------------------------------\n\n\n//\n\n//------------------- Use of OPERATOR INTERVAL -----------\n\n// import { interval } from 'rxjs';\n\n// const obs = new interval(1000);\n\n\n// const subscriber = obs.subscribe(\n//     console.log\n// )\n\n//------------------- Use of OPERATOR TIMER --------------\n\n// import { timer } from 'rxjs'\n\n// const obs = new timer(0, 1000);\n\n// const subscriber = obs.subscribe(console.log);\n\n//\n\n//--------------------------------------------------- DOM Event OPERATORS-------------------------------------------------\n\n//\n\n// import { from, fromEvent } from 'rxjs'\n\n// const obs = new fromEvent(\n//     document, 'click'\n// );\n\n// const subscriber = obs.subscribe(console.log);\n\n//\n\n//--------------------------------------------------- Of and From OPERATORS----------------------------------------------\n\n//\n\n//---------------------- OF Operator ------------------\n\n//import { of ,from} from 'rxjs'\n\n//const obs = of(1, 2, 3, 4, 5);   \n//const obs = of([1, 2, 3, 4, 5]);   //cant show array elements individually\n\n// const subs = obs.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n\n//---- OF retruns PROMISE\n\n// const obs = of(fetch('https://jsonplaceholder.typicode.com/todos/1'));   //cant show array elements individually\n\n// const subs = obs.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n\n//\n//---------------------- FOR Operator\n//\n\n// const obsFor = from([1, 2, 3, 4, 5]);   //cant show array elements individually\n\n// const subsFor = obsFor.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n\n//------ FROM returns values\n\n// const obsFor = from(fetch('https://jsonplaceholder.typicode.com/todos/1'));   //cant show array elements individually\n\n// const subsFor = obsFor.subscribe({\n//     next(value) { console.log(value)},\n//     complete() { console.log('complete')}\n// })\n\n\n//\n\n//--------------------------------------------------- MAP OPERATORS----------------------------------------------\n\n//\n\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst obs = of(1, 2, 3, 4, 5).pipe(\n    map((value)=>`$${value}`)\n)\n\nconst subs = obs.subscribe({\n    next(value) { console.log(value) },\n    complete() { console.log('complete')}\n})"},"lineCount":null}},"error":null,"hash":"3fa00190e016bf3c7dad3e2bf6ce2982","cacheData":{"env":{}}}