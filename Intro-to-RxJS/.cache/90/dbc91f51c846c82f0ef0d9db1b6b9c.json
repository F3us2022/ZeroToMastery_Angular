{"id":"../node_modules/rxjs/dist/esm5/internal/operators/mergeWith.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeWith.js.map","includedInParent":true,"mtime":1655261656602},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\mergeWith.ts","includedInParent":true,"mtime":1655261656734},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"tslib","loc":{"line":1,"column":38,"index":38},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeWith.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\tslib\\tslib.es6.js"},{"name":"./merge","loc":{"line":2,"column":22,"index":70},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeWith.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\merge.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeWith = mergeWith;\n\nvar _tslib = require(\"tslib\");\n\nvar _merge = require(\"./merge\");\n\nfunction mergeWith() {\n  var otherSources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    otherSources[_i] = arguments[_i];\n  }\n\n  return _merge.merge.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(otherSources)));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":45,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":12,"column":18}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":45,"column":25},"generated":{"line":12,"column":21}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":13,"column":18}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":13,"column":21}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":7}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":11}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":19}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":24}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":33}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":34}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":42}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":15,"column":44}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":47},"generated":{"line":15,"column":48}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":17}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":19}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":23}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":32}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":33}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":35}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":16,"column":36}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":19,"column":21}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":22}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":19,"column":27}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":28}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":33}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":19,"column":34}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":36}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":40}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":60}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":62}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":64}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":66}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":70}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":83}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":18},"generated":{"line":19,"column":85}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":97}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":19,"column":98}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":19,"column":99}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":19,"column":100}},{"source":"../../../../src/internal/operators/mergeWith.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../../../src/internal/operators/mergeWith.ts":"import { ObservableInputTuple, OperatorFunction } from '../types';\r\nimport { merge } from './merge';\r\n\r\n/**\r\n * Merge the values from all observables to a single observable result.\r\n *\r\n * Creates an observable, that when subscribed to, subscribes to the source\r\n * observable, and all other sources provided as arguments. All values from\r\n * every source are emitted from the resulting subscription.\r\n *\r\n * When all sources complete, the resulting observable will complete.\r\n *\r\n * When any source errors, the resulting observable will error.\r\n *\r\n * ## Example\r\n *\r\n * Joining all outputs from multiple user input event streams\r\n *\r\n * ```ts\r\n * import { fromEvent, map, mergeWith } from 'rxjs';\r\n *\r\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\r\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\r\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\r\n *\r\n * mousemoves$\r\n *   .pipe(mergeWith(clicks$, dblclicks$))\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // result (assuming user interactions)\r\n * // 'mousemove'\r\n * // 'mousemove'\r\n * // 'mousemove'\r\n * // 'click'\r\n * // 'click'\r\n * // 'dblclick'\r\n * ```\r\n *\r\n * @see {@link merge}\r\n *\r\n * @param otherSources the sources to combine the current source with.\r\n * @return A function that returns an Observable that merges the values from\r\n * all given Observables.\r\n */\r\nexport function mergeWith<T, A extends readonly unknown[]>(\r\n  ...otherSources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]> {\r\n  return merge(...otherSources);\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"429e48609222366f1a22b32f41953900","cacheData":{"env":{}}}