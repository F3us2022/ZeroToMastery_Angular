{"id":"../node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\ignoreElements.js.map","includedInParent":true,"mtime":1655261656599},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\ignoreElements.ts","includedInParent":true,"mtime":1655261656731},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/lift","loc":{"line":1,"column":24,"index":24},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\ignoreElements.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41,"index":82},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\ignoreElements.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"},{"name":"../util/noop","loc":{"line":3,"column":21,"index":128},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\ignoreElements.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\noop.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ignoreElements = ignoreElements;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nvar _noop = require(\"../util/noop\");\n\nfunction ignoreElements() {\n  return (0, _lift.operate)(function (source, subscriber) {\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, _noop.noop));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":41,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":14,"column":23}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":14,"column":26}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":15,"column":9}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":15,"column":26}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":18},"generated":{"line":15,"column":38}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":15,"column":44}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":26},"generated":{"line":15,"column":46}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":15,"column":56}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":36},"generated":{"line":15,"column":58}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":16,"column":10}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":11},"generated":{"line":16,"column":11}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":16,"column":21}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":16,"column":25}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":16,"column":69}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":46},"generated":{"line":16,"column":71}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":16,"column":81}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":58},"generated":{"line":16,"column":83}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":16,"column":93}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":16,"column":94}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":44,"column":3},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":17,"column":3}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/ignoreElements.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../../../../src/internal/operators/ignoreElements.ts":"import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\r\n *\r\n * ![](ignoreElements.png)\r\n *\r\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\r\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\r\n *\r\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\r\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\r\n * to the Observable, which will ensure that it will never call its observersâ€™ `next` handlers.\r\n *\r\n * ## Example\r\n *\r\n * Ignore all `next` emissions from the source\r\n *\r\n * ```ts\r\n * import { of, ignoreElements } from 'rxjs';\r\n *\r\n * of('you', 'talking', 'to', 'me')\r\n *   .pipe(ignoreElements())\r\n *   .subscribe({\r\n *     next: word => console.log(word),\r\n *     error: err => console.log('error:', err),\r\n *     complete: () => console.log('the end'),\r\n *   });\r\n *\r\n * // result:\r\n * // 'the end'\r\n * ```\r\n *\r\n * @return A function that returns an empty Observable that only calls\r\n * `complete` or `error`, based on which one is called by the source\r\n * Observable.\r\n */\r\nexport function ignoreElements(): OperatorFunction<unknown, never> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\r\n  });\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"32fc0ba8be83770cecf387a0f8b3c650","cacheData":{"env":{}}}