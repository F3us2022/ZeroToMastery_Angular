{"id":"../node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMapTo.js.map","includedInParent":true,"mtime":1655261656602},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\mergeMapTo.ts","includedInParent":true,"mtime":1655261656733},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"./mergeMap","loc":{"line":1,"column":25,"index":25},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMapTo.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMap.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27,"index":67},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMapTo.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeMapTo = mergeMapTo;\n\nvar _mergeMap = require(\"./mergeMap\");\n\nvar _isFunction = require(\"../util/isFunction\");\n\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n\n  if ((0, _isFunction.isFunction)(resultSelector)) {\n    return (0, _mergeMap.mergeMap)(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return (0, _mergeMap.mergeMap)(function () {\n    return innerObservable;\n  }, concurrent);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":35}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":12,"column":37}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":51}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":12,"column":53}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":63}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":12,"column":65}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":16}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":21}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":26}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":27}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":13,"column":29}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":14,"column":14}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":14,"column":17}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":17,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":17,"column":10}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":17,"column":32}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":17,"column":34}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":17,"column":48}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":17,"column":49}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":17,"column":51}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":18,"column":11}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":18,"column":15}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":18,"column":33}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":20},"generated":{"line":18,"column":35}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":20},"generated":{"line":18,"column":47}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":19,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":19,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":19,"column":28}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":20,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":20,"column":5}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":43},"generated":{"line":20,"column":7}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":20,"column":21}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":59},"generated":{"line":20,"column":23}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":20,"column":33}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":20,"column":34}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":69,"column":3},"generated":{"line":21,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":23,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":23,"column":6}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":23,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":23,"column":27}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":32},"generated":{"line":23,"column":32}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":23,"column":40}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":70,"column":42},"generated":{"line":23,"column":42}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":24,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":24,"column":14}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":17},"generated":{"line":24,"column":17}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":24,"column":31}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":72,"column":3},"generated":{"line":25,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":27,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":27,"column":9}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":27,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":27,"column":31}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":27,"column":33}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":27,"column":45}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":28,"column":4}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":28,"column":11}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":28,"column":26}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":29,"column":2}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":29,"column":3}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":41},"generated":{"line":29,"column":5}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":29,"column":15}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":29,"column":16}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":74,"column":1},"generated":{"line":30,"column":0}}],"sources":{"../../../../src/internal/operators/mergeMapTo.ts":"import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\r\nimport { mergeMap } from './mergeMap';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\r\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  concurrent?: number\r\n): OperatorFunction<unknown, ObservedValueOf<O>>;\r\n/**\r\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\r\n * Details: https://rxjs.dev/deprecations/resultSelector\r\n */\r\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\r\n  concurrent?: number\r\n): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to the same Observable which is merged multiple\r\n * times in the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\r\n * to the same inner Observable.</span>\r\n *\r\n * ![](mergeMapTo.png)\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then merges those resulting Observables into one\r\n * single Observable, which is the output Observable.\r\n *\r\n * ## Example\r\n *\r\n * For each click event, start an interval Observable ticking every 1 second\r\n *\r\n * ```ts\r\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link concatMapTo}\r\n * @see {@link merge}\r\n * @see {@link mergeAll}\r\n * @see {@link mergeMap}\r\n * @see {@link mergeScan}\r\n * @see {@link switchMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @param {number} [concurrent=Infinity] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @return A function that returns an Observable that emits items from the\r\n * given `innerObservable`.\r\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\r\n */\r\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\r\n  concurrent: number = Infinity\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  if (isFunction(resultSelector)) {\r\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\r\n  }\r\n  if (typeof resultSelector === 'number') {\r\n    concurrent = resultSelector;\r\n  }\r\n  return mergeMap(() => innerObservable, concurrent);\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"a34940e6b1c5797cfbde2b9f5379e2e0","cacheData":{"env":{}}}