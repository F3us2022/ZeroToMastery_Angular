{"id":"../node_modules/rxjs/dist/esm5/internal/observable/partition.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js.map","includedInParent":true,"mtime":1655261656586},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\observable\\partition.ts","includedInParent":true,"mtime":1655261656724},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/not","loc":{"line":1,"column":20,"index":20},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\not.js"},{"name":"../operators/filter","loc":{"line":2,"column":23,"index":59},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js"},{"name":"./innerFrom","loc":{"line":3,"column":26,"index":109},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\innerFrom.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partition = partition;\n\nvar _not = require(\"../util/not\");\n\nvar _filter = require(\"../operators/filter\");\n\nvar _innerFrom = require(\"./innerFrom\");\n\nfunction partition(source, predicate, thisArg) {\n  return [(0, _filter.filter)(predicate, thisArg)((0, _innerFrom.innerFrom)(source)), (0, _filter.filter)((0, _not.not)(predicate, thisArg))((0, _innerFrom.innerFrom)(source))];\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":14,"column":18}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":14,"column":19}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":14,"column":27}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":14,"column":36}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":14,"column":38}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":14,"column":45}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":15},"generated":{"line":14,"column":47}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":15,"column":9}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":15,"column":10}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":15,"column":14}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":17},"generated":{"line":15,"column":30}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":15,"column":39}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":28},"generated":{"line":15,"column":41}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":15,"column":48}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":15,"column":50}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":15,"column":54}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":15,"column":74}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":47},"generated":{"line":15,"column":76}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":37},"generated":{"line":15,"column":82}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":15,"column":83}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":15,"column":84}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":57},"generated":{"line":15,"column":86}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":57},"generated":{"line":15,"column":90}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":57},"generated":{"line":15,"column":104}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":64},"generated":{"line":15,"column":106}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":64},"generated":{"line":15,"column":110}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":64},"generated":{"line":15,"column":118}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":68},"generated":{"line":15,"column":120}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":64},"generated":{"line":15,"column":129}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":79},"generated":{"line":15,"column":131}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":64},"generated":{"line":15,"column":138}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":57},"generated":{"line":15,"column":139}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":89},"generated":{"line":15,"column":141}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":89},"generated":{"line":15,"column":145}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":89},"generated":{"line":15,"column":165}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":99},"generated":{"line":15,"column":167}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":89},"generated":{"line":15,"column":173}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":57},"generated":{"line":15,"column":174}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":15,"column":175}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":15,"column":176}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":88,"column":1},"generated":{"line":16,"column":0}}],"sources":{"../../../../src/internal/observable/partition.ts":"import { not } from '../util/not';\r\nimport { filter } from '../operators/filter';\r\nimport { ObservableInput } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { innerFrom } from './innerFrom';\r\n\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function partition<T, U extends T, A>(\r\n  source: ObservableInput<T>,\r\n  predicate: (this: A, value: T, index: number) => value is U,\r\n  thisArg: A\r\n): [Observable<U>, Observable<Exclude<T, U>>];\r\nexport function partition<T, U extends T>(\r\n  source: ObservableInput<T>,\r\n  predicate: (value: T, index: number) => value is U\r\n): [Observable<U>, Observable<Exclude<T, U>>];\r\n\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function partition<T, A>(\r\n  source: ObservableInput<T>,\r\n  predicate: (this: A, value: T, index: number) => boolean,\r\n  thisArg: A\r\n): [Observable<T>, Observable<T>];\r\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\r\n\r\n/**\r\n * Splits the source Observable into two, one with values that satisfy a\r\n * predicate, and another with values that don't satisfy the predicate.\r\n *\r\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\r\n * one like the output of {@link filter}, and the other with values that did not\r\n * pass the condition.</span>\r\n *\r\n * ![](partition.png)\r\n *\r\n * `partition` outputs an array with two Observables that partition the values\r\n * from the source Observable through the given `predicate` function. The first\r\n * Observable in that array emits source values for which the predicate argument\r\n * returns true. The second Observable emits source values for which the\r\n * predicate returns false. The first behaves like {@link filter} and the second\r\n * behaves like {@link filter} with the predicate negated.\r\n *\r\n * ## Example\r\n *\r\n * Partition a set of numbers into odds and evens observables\r\n *\r\n * ```ts\r\n * import { of, partition } from 'rxjs';\r\n *\r\n * const observableValues = of(1, 2, 3, 4, 5, 6);\r\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\r\n *\r\n * odds$.subscribe(x => console.log('odds', x));\r\n * evens$.subscribe(x => console.log('evens', x));\r\n *\r\n * // Logs:\r\n * // odds 1\r\n * // odds 3\r\n * // odds 5\r\n * // evens 2\r\n * // evens 4\r\n * // evens 6\r\n * ```\r\n *\r\n * @see {@link filter}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted on the first Observable in the returned array, if\r\n * `false` the value is emitted on the second Observable in the array. The\r\n * `index` parameter is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\r\n * with values that passed the predicate, and another with values that did not\r\n * pass the predicate.\r\n */\r\nexport function partition<T>(\r\n  source: ObservableInput<T>,\r\n  predicate: (this: any, value: T, index: number) => boolean,\r\n  thisArg?: any\r\n): [Observable<T>, Observable<T>] {\r\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\r\n    Observable<T>,\r\n    Observable<T>\r\n  ];\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"eb9ff265df586297c2185fcdee04e719","cacheData":{"env":{}}}