{"id":"../node_modules/rxjs/dist/esm5/internal/operators/endWith.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\endWith.js.map","includedInParent":true,"mtime":1655261656596},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\endWith.ts","includedInParent":true,"mtime":1655261656729},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"tslib","loc":{"line":1,"column":38,"index":38},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\endWith.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\tslib\\tslib.es6.js"},{"name":"../observable/concat","loc":{"line":2,"column":23,"index":71},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\endWith.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\concat.js"},{"name":"../observable/of","loc":{"line":3,"column":19,"index":115},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\endWith.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\of.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.endWith = endWith;\n\nvar _tslib = require(\"tslib\");\n\nvar _concat = require(\"../observable/concat\");\n\nvar _of = require(\"../observable/of\");\n\nfunction endWith() {\n  var values = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n\n  return function (source) {\n    return (0, _concat.concat)(source, _of.of.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(values))));\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":23},"generated":{"line":14,"column":19}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":15,"column":12}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":15,"column":15}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":15,"column":17}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":7}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":11}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":13}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":16}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":19}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":21}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":24}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":33}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":34}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":42}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":17,"column":44}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":62},"generated":{"line":17,"column":48}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":10}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":11}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":13}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":14}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":17}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":26}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":29}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":18,"column":30}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":21,"column":9}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":21,"column":19}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":21,"column":25}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":31},"generated":{"line":21,"column":27}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":11}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":15}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":29}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":43},"generated":{"line":22,"column":31}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":37}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":51},"generated":{"line":22,"column":39}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":51},"generated":{"line":22,"column":45}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":46}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":51},"generated":{"line":22,"column":51}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":52}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":57}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":51},"generated":{"line":22,"column":58}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":60}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":64}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":84}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":86}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":88}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":90}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":94}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":107}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":57},"generated":{"line":22,"column":109}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":115}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":22,"column":116}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":51},"generated":{"line":22,"column":117}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":118}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":36},"generated":{"line":22,"column":119}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":82},"generated":{"line":23,"column":2}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":23,"column":3}},{"source":"../../../../src/internal/operators/endWith.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":0}}],"sources":{"../../../../src/internal/operators/endWith.ts":"/** prettier */\r\nimport { Observable } from '../Observable';\r\nimport { concat } from '../observable/concat';\r\nimport { of } from '../observable/of';\r\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\r\n\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function endWith<T, A extends unknown[] = T[]>(\r\n  ...valuesAndScheduler: [...A, SchedulerLike]\r\n): OperatorFunction<T, T | ValueFromArray<A>>;\r\n\r\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\r\n\r\n/**\r\n * Returns an observable that will emit all values from the source, then synchronously emit\r\n * the provided value(s) immediately after the source completes.\r\n *\r\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\r\n * types in TypeScript.\r\n *\r\n * This is useful for knowing when an observable ends. Particularly when paired with an\r\n * operator like {@link takeUntil}\r\n *\r\n * ![](endWith.png)\r\n *\r\n * ## Example\r\n *\r\n * Emit values to know when an interval starts and stops. The interval will\r\n * stop when a user clicks anywhere on the document.\r\n *\r\n * ```ts\r\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\r\n *\r\n * const ticker$ = interval(5000).pipe(\r\n *   map(() => 'tick')\r\n * );\r\n *\r\n * const documentClicks$ = fromEvent(document, 'click');\r\n *\r\n * ticker$.pipe(\r\n *   startWith('interval started'),\r\n *   takeUntil(documentClicks$),\r\n *   endWith('interval ended by click')\r\n * )\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // Result (assuming a user clicks after 15 seconds)\r\n * // 'interval started'\r\n * // 'tick'\r\n * // 'tick'\r\n * // 'tick'\r\n * // 'interval ended by click'\r\n * ```\r\n *\r\n * @see {@link startWith}\r\n * @see {@link concat}\r\n * @see {@link takeUntil}\r\n *\r\n * @param values Items you want the modified Observable to emit last.\r\n * @return A function that returns an Observable that emits all values from the\r\n * source, then synchronously emits the provided value(s) immediately after the\r\n * source completes.\r\n */\r\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\r\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"724177a17e09c954c3bc7a67bac6c998","cacheData":{"env":{}}}