{"id":"../node_modules/rxjs/dist/esm5/internal/operators/switchScan.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchScan.js.map","includedInParent":true,"mtime":1655261656611},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\switchScan.ts","includedInParent":true,"mtime":1655261656740},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"./switchMap","loc":{"line":1,"column":26,"index":26},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchScan.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchMap.js"},{"name":"../util/lift","loc":{"line":2,"column":24,"index":66},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchScan.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchScan = switchScan;\n\nvar _switchMap = require(\"./switchMap\");\n\nvar _lift = require(\"../util/lift\");\n\nfunction switchScan(accumulator, seed) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    var state = seed;\n    (0, _switchMap.switchMap)(function (value, index) {\n      return accumulator(state, value, index);\n    }, function (_, innerValue) {\n      return state = innerValue, innerValue;\n    })(source).subscribe(subscriber);\n    return function () {\n      state = null;\n    };\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":24,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":24,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":24,"column":6},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":24,"column":6},"generated":{"line":12,"column":31}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":12,"column":33}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":24,"column":6},"generated":{"line":12,"column":37}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":12,"column":39}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":13,"column":26}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":13,"column":28}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":18},"generated":{"line":13,"column":38}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":13,"column":44}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":26},"generated":{"line":13,"column":46}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":13,"column":56}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":36},"generated":{"line":13,"column":58}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":14,"column":8}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":14,"column":13}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":14,"column":20}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":15,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":15,"column":8}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":15,"column":30}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":15,"column":40}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":15,"column":45}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":17},"generated":{"line":15,"column":47}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":15,"column":52}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":15,"column":54}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":27},"generated":{"line":16,"column":6}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":27},"generated":{"line":16,"column":13}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":16,"column":24}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":39},"generated":{"line":16,"column":25}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":16,"column":30}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":46},"generated":{"line":16,"column":32}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":16,"column":37}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":53},"generated":{"line":16,"column":39}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":16,"column":44}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":27},"generated":{"line":16,"column":45}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":39,"column":59},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":17,"column":5}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":17,"column":7}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":17,"column":17}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":17,"column":18}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":17,"column":20}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":17,"column":30}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":20},"generated":{"line":17,"column":32}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":25},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":27},"generated":{"line":18,"column":13}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":32},"generated":{"line":18,"column":18}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":35},"generated":{"line":18,"column":21}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":26},"generated":{"line":18,"column":31}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":48},"generated":{"line":18,"column":33}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":25},"generated":{"line":18,"column":43}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":42,"column":59},"generated":{"line":19,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":19,"column":5}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":19,"column":7}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":19,"column":13}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":43,"column":14},"generated":{"line":19,"column":15}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":19,"column":24}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":19,"column":25}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":19,"column":35}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":45,"column":11},"generated":{"line":20,"column":11}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":45,"column":11},"generated":{"line":20,"column":23}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":21,"column":6}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":47,"column":11},"generated":{"line":21,"column":11}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":47,"column":14},"generated":{"line":21,"column":14}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":21,"column":18}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":48,"column":5},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":22,"column":5}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":49,"column":3},"generated":{"line":23,"column":2}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":23,"column":3}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":23,"column":4}},{"source":"../../../../src/internal/operators/switchScan.ts","name":null,"original":{"line":50,"column":1},"generated":{"line":24,"column":0}}],"sources":{"../../../../src/internal/operators/switchScan.ts":"import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\r\nimport { switchMap } from './switchMap';\r\nimport { operate } from '../util/lift';\r\n\r\n// TODO: Generate a marble diagram for these docs.\r\n\r\n/**\r\n * Applies an accumulator function over the source Observable where the\r\n * accumulator function itself returns an Observable, emitting values\r\n * only from the most recently returned Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\r\n * Observable returned by the accumulator is merged into the outer Observable.</span>\r\n *\r\n * @see {@link scan}\r\n * @see {@link mergeScan}\r\n * @see {@link switchMap}\r\n *\r\n * @param accumulator\r\n * The accumulator function called on each source value.\r\n * @param seed The initial accumulation value.\r\n * @return A function that returns an observable of the accumulated values.\r\n */\r\nexport function switchScan<T, R, O extends ObservableInput<any>>(\r\n  accumulator: (acc: R, value: T, index: number) => O,\r\n  seed: R\r\n): OperatorFunction<T, ObservedValueOf<O>> {\r\n  return operate((source, subscriber) => {\r\n    // The state we will keep up to date to pass into our\r\n    // accumulator function at each new value from the source.\r\n    let state = seed;\r\n\r\n    // Use `switchMap` on our `source` to do the work of creating\r\n    // this operator. Note the backwards order here of `switchMap()(source)`\r\n    // to avoid needing to use `pipe` unnecessarily\r\n    switchMap(\r\n      // On each value from the source, call the accumulator with\r\n      // our previous state, the value and the index.\r\n      (value: T, index) => accumulator(state, value, index),\r\n      // Using the deprecated result selector here as a dirty trick\r\n      // to update our state with the flattened value.\r\n      (_, innerValue) => ((state = innerValue), innerValue)\r\n    )(source).subscribe(subscriber);\r\n\r\n    return () => {\r\n      // Release state on finalization\r\n      state = null!;\r\n    };\r\n  });\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"5f6951564cb8aefc5254d9cc5276dbf0","cacheData":{"env":{}}}