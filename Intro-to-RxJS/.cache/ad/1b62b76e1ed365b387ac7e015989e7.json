{"id":"../node_modules/rxjs/dist/esm5/internal/operators/single.js","dependencies":[{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js.map","includedInParent":true,"mtime":1655261656608},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\src\\internal\\operators\\single.ts","includedInParent":true,"mtime":1655261656738},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\package.json","includedInParent":true,"mtime":1655261657032},{"name":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1655261656714},{"name":"../util/EmptyError","loc":{"line":1,"column":27,"index":27},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\EmptyError.js"},{"name":"../util/SequenceError","loc":{"line":2,"column":30,"index":80},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\SequenceError.js"},{"name":"../util/NotFoundError","loc":{"line":3,"column":30,"index":136},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\NotFoundError.js"},{"name":"../util/lift","loc":{"line":4,"column":24,"index":186},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":5,"column":41,"index":244},"parent":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"W:\\Work\\ZeroToMastery_Angular\\Intro-to-RxJS\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.single = single;\n\nvar _EmptyError = require(\"../util/EmptyError\");\n\nvar _SequenceError = require(\"../util/SequenceError\");\n\nvar _NotFoundError = require(\"../util/NotFoundError\");\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction single(predicate) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    var hasValue = false;\n    var singleValue;\n    var seenValue = false;\n    var index = 0;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      seenValue = true;\n\n      if (!predicate || predicate(value, index++, source)) {\n        hasValue && subscriber.error(new _SequenceError.SequenceError('Too many matching values'));\n        hasValue = true;\n        singleValue = value;\n      }\n    }, function () {\n      if (hasValue) {\n        subscriber.next(singleValue);\n        subscriber.complete();\n      } else {\n        subscriber.error(seenValue ? new _NotFoundError.NotFoundError('No matching values') : new _EmptyError.EmptyError());\n      }\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":18,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":18,"column":9}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":18,"column":15}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":89,"column":26},"generated":{"line":18,"column":16}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":18,"column":25}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":89,"column":97},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":19,"column":13}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":19,"column":26}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":19,"column":28}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":18},"generated":{"line":19,"column":38}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":19,"column":44}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":26},"generated":{"line":19,"column":46}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":19,"column":56}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":36},"generated":{"line":19,"column":58}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":91,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":20,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":91,"column":16},"generated":{"line":20,"column":16}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":91,"column":19},"generated":{"line":20,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":91,"column":4},"generated":{"line":20,"column":24}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":21,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":21,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":21,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":8},"generated":{"line":22,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":17},"generated":{"line":22,"column":17}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":20},"generated":{"line":22,"column":20}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":22,"column":25}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":23,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":23,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":13},"generated":{"line":23,"column":13}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":16},"generated":{"line":23,"column":16}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":23,"column":17}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":24,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":10},"generated":{"line":24,"column":10}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":11},"generated":{"line":24,"column":11}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":24,"column":20}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":24,"column":21}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":24,"column":25}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":24,"column":69}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":97,"column":8},"generated":{"line":24,"column":71}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":24,"column":81}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":98,"column":8},"generated":{"line":24,"column":83}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":98,"column":9},"generated":{"line":24,"column":93}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":98,"column":8},"generated":{"line":24,"column":98}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":24,"column":100}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":25,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":99,"column":19},"generated":{"line":25,"column":15}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":99,"column":22},"generated":{"line":25,"column":18}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":25,"column":22}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":10},"generated":{"line":27,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":14},"generated":{"line":27,"column":10}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":15},"generated":{"line":27,"column":11}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":14},"generated":{"line":27,"column":20}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":28},"generated":{"line":27,"column":24}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":27,"column":33}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":38},"generated":{"line":27,"column":34}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":27,"column":39}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":45},"generated":{"line":27,"column":41}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":50},"generated":{"line":27,"column":46}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":27,"column":48}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":54},"generated":{"line":27,"column":50}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":37},"generated":{"line":27,"column":56}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":10},"generated":{"line":27,"column":57}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":63},"generated":{"line":27,"column":59}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":12},"generated":{"line":28,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":20},"generated":{"line":28,"column":16}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":24},"generated":{"line":28,"column":20}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":34},"generated":{"line":28,"column":30}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":35},"generated":{"line":28,"column":31}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":24},"generated":{"line":28,"column":36}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":41},"generated":{"line":28,"column":37}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":45},"generated":{"line":28,"column":41}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":41},"generated":{"line":28,"column":69}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":59},"generated":{"line":28,"column":70}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":41},"generated":{"line":28,"column":96}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":24},"generated":{"line":28,"column":97}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":12},"generated":{"line":28,"column":98}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":102,"column":12},"generated":{"line":29,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":102,"column":20},"generated":{"line":29,"column":16}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":102,"column":23},"generated":{"line":29,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":102,"column":12},"generated":{"line":29,"column":23}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":103,"column":12},"generated":{"line":30,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":103,"column":23},"generated":{"line":30,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":103,"column":26},"generated":{"line":30,"column":22}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":103,"column":12},"generated":{"line":30,"column":27}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":104,"column":11},"generated":{"line":31,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":9},"generated":{"line":32,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":32,"column":5}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":106,"column":8},"generated":{"line":32,"column":7}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":106,"column":8},"generated":{"line":32,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":33,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":14},"generated":{"line":33,"column":10}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":33,"column":18}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":24},"generated":{"line":33,"column":20}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":108,"column":12},"generated":{"line":34,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":108,"column":22},"generated":{"line":34,"column":18}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":108,"column":23},"generated":{"line":34,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":108,"column":12},"generated":{"line":34,"column":23}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":108,"column":28},"generated":{"line":34,"column":24}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":108,"column":12},"generated":{"line":34,"column":35}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":109,"column":12},"generated":{"line":35,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":109,"column":22},"generated":{"line":35,"column":18}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":109,"column":23},"generated":{"line":35,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":109,"column":12},"generated":{"line":35,"column":27}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":110,"column":11},"generated":{"line":36,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":36,"column":7}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":110,"column":17},"generated":{"line":36,"column":13}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":12},"generated":{"line":37,"column":8}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":22},"generated":{"line":37,"column":18}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":23},"generated":{"line":37,"column":19}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":12},"generated":{"line":37,"column":24}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":29},"generated":{"line":37,"column":25}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":38},"generated":{"line":37,"column":34}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":41},"generated":{"line":37,"column":37}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":45},"generated":{"line":37,"column":41}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":41},"generated":{"line":37,"column":69}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":59},"generated":{"line":37,"column":70}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":41},"generated":{"line":37,"column":90}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":38},"generated":{"line":37,"column":91}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":83},"generated":{"line":37,"column":94}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":87},"generated":{"line":37,"column":98}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":83},"generated":{"line":37,"column":120}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":12},"generated":{"line":37,"column":122}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":112,"column":11},"generated":{"line":38,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":113,"column":9},"generated":{"line":39,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":39,"column":5}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":39,"column":6}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":116,"column":3},"generated":{"line":40,"column":2}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":40,"column":3}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":40,"column":4}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":117,"column":1},"generated":{"line":41,"column":0}}],"sources":{"../../../../src/internal/operators/single.ts":"import { Observable } from '../Observable';\r\nimport { EmptyError } from '../util/EmptyError';\r\n\r\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\r\nimport { SequenceError } from '../util/SequenceError';\r\nimport { NotFoundError } from '../util/NotFoundError';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns an observable that asserts that only one value is\r\n * emitted from the observable that matches the predicate. If no\r\n * predicate is provided, then it will assert that the observable\r\n * only emits one value.\r\n *\r\n * In the event that the observable is empty, it will throw an\r\n * {@link EmptyError}.\r\n *\r\n * In the event that two values are found that match the predicate,\r\n * or when there are two values emitted and no predicate, it will\r\n * throw a {@link SequenceError}\r\n *\r\n * In the event that no values match the predicate, if one is provided,\r\n * it will throw a {@link NotFoundError}\r\n *\r\n * ## Example\r\n *\r\n * Expect only `name` beginning with `'B'`\r\n *\r\n * ```ts\r\n * import { of, single } from 'rxjs';\r\n *\r\n * const source1 = of(\r\n *  { name: 'Ben' },\r\n *  { name: 'Tracy' },\r\n *  { name: 'Laney' },\r\n *  { name: 'Lily' }\r\n * );\r\n *\r\n * source1\r\n *   .pipe(single(x => x.name.startsWith('B')))\r\n *   .subscribe(x => console.log(x));\r\n * // Emits 'Ben'\r\n *\r\n *\r\n * const source2 = of(\r\n *  { name: 'Ben' },\r\n *  { name: 'Tracy' },\r\n *  { name: 'Bradley' },\r\n *  { name: 'Lincoln' }\r\n * );\r\n *\r\n * source2\r\n *   .pipe(single(x => x.name.startsWith('B')))\r\n *   .subscribe({ error: err => console.error(err) });\r\n * // Error emitted: SequenceError('Too many values match')\r\n *\r\n *\r\n * const source3 = of(\r\n *  { name: 'Laney' },\r\n *  { name: 'Tracy' },\r\n *  { name: 'Lily' },\r\n *  { name: 'Lincoln' }\r\n * );\r\n *\r\n * source3\r\n *   .pipe(single(x => x.name.startsWith('B')))\r\n *   .subscribe({ error: err => console.error(err) });\r\n * // Error emitted: NotFoundError('No values match')\r\n * ```\r\n *\r\n * @see {@link first}\r\n * @see {@link find}\r\n * @see {@link findIndex}\r\n * @see {@link elementAt}\r\n *\r\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\r\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\r\n * than one value comes from the source\r\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\r\n * @return A function that returns an Observable that emits the single item\r\n * emitted by the source Observable that matches the predicate.\r\n */\r\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    let singleValue: T;\r\n    let seenValue = false;\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          seenValue = true;\r\n          if (!predicate || predicate(value, index++, source)) {\r\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\r\n            hasValue = true;\r\n            singleValue = value;\r\n          }\r\n        },\r\n        () => {\r\n          if (hasValue) {\r\n            subscriber.next(singleValue);\r\n            subscriber.complete();\r\n          } else {\r\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\r\n          }\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"6e924c0aa5f8956ca80cccd96a4bce2b","cacheData":{"env":{}}}